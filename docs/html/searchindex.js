Search.setIndex({"docnames": ["binfhe", "binfhe_enums", "ciphertext", "cryptocontext", "index", "keys", "pke_enums", "plaintext"], "filenames": ["binfhe.rst", "binfhe_enums.rst", "ciphertext.rst", "cryptocontext.rst", "index.rst", "keys.rst", "pke_enums.rst", "plaintext.rst"], "titles": ["BinFHEContext", "BinFHE enums", "Ciphertext", "CryptoContext", "Welcome to OpenFHE - Python\u2019s documentation!", "Public Key", "PKE enums", "Plaintext"], "terms": {"class": [0, 1, 2, 3, 5, 6, 7], "openfh": [0, 1, 2, 3, 5, 6, 7], "base": [0, 1, 2, 3, 5, 6, 7], "pybind11_object": [0, 1, 2, 3, 5, 6, 7], "btkeygen": 0, "self": [0, 2, 3, 5, 7], "sk": 0, "lbcrypto": [0, 3], "lweprivatekeyimpl": 0, "keygenmod": 0, "keygen_mod": 0, "sym_encrypt": 0, "0": [0, 1, 3, 6], "none": [0, 2, 3, 5, 7], "gener": [0, 3], "bootstrap": [0, 1, 3], "kei": [0, 3, 4], "paramet": [0, 2, 3, 7], "The": [0, 2, 3, 7], "secret": [0, 3, 4, 5], "decrypt": [0, 3], "ct": 0, "lweciphertextimpl": 0, "p": [0, 3, 7], "int": [0, 2, 3, 7], "4": [0, 1, 3, 6], "ciphertext": [0, 3, 4], "us": [0, 3], "plaintext": [0, 3, 4], "modulu": [0, 3, 7], "default": [0, 3], "return": [0, 2, 3, 5, 7], "type": [0, 2, 3, 5, 7], "encrypt": [0, 3, 4, 7], "m": [0, 3], "output": [0, 3], "binfhe_output": [0, 1], "2": [0, 1, 3, 6, 7], "mod": [0, 3], "bit": [0, 7], "integ": [0, 3], "symmetr": 0, "fresh": [0, 1, 3], "refresh": [0, 3], "accord": 0, "instead": [0, 3], "m_q": 0, "evalbing": 0, "gate": 0, "bingat": [0, 1], "ct1": 0, "ct2": 0, "evalu": [0, 3, 7], "binari": [0, 3], "call": [0, 3], "subroutin": 0, "can": [0, 3, 7], "AND": [0, 1, 3], "OR": [0, 1], "nand": [0, 1], "nor": [0, 1], "xor": [0, 1], "xnor": [0, 1], "first": [0, 3], "second": [0, 3], "result": [0, 3, 5], "evaldecomp": 0, "list": [0, 3, 7], "decomposit": [0, 3], "evalfloor": 0, "roundbit": 0, "round": 0, "down": 0, "function": [0, 3, 7], "number": [0, 2, 3, 7], "evalfunc": 0, "lut": 0, "an": [0, 2, 3, 4], "arbitrari": 0, "look": 0, "up": [0, 3], "tabl": 0, "evalnot": 0, "NOT": [0, 3], "input": [0, 3], "evalsign": 0, "schemeswitch": [0, 6], "bool": [0, 3, 5, 7], "fals": [0, 3, 7], "sign": [0, 3], "over": [0, 3, 4], "larg": 0, "precis": [0, 3, 7], "flag": 0, "indic": [0, 3], "should": [0, 3], "compat": 0, "scheme": [0, 3, 4, 7], "switch": [0, 3], "generatebinfhecontext": 0, "arg": [0, 3, 7], "kwarg": [0, 3, 7], "overload": [0, 3, 7], "set": [0, 2, 3, 7], "binfhe_paramset": [0, 1], "method": [0, 3, 7], "binfhe_method": 0, "ginx": [0, 1], "creat": [0, 3], "crypto": [0, 3], "context": [0, 3], "predefin": 0, "recommend": 0, "most": 0, "user": [0, 3, 4], "param": [0, 3], "toi": [0, 1], "medium": [0, 1], "std128": [0, 1], "std192": [0, 1], "std256": [0, 1], "variant": 0, "dm": [0, 4], "cggi": [0, 4], "lmkcdei": [0, 1], "rtype": [0, 3, 7], "arbfunc": 0, "logq": [0, 3], "11": [0, 1], "n": 0, "timeoptim": 0, "custom": 0, "care": 0, "onli": [0, 3, 7], "advanc": 0, "familiar": 0, "lwe": 0, "select": 0, "whether": [0, 5], "need": [0, 3], "log": [0, 7], "ring": [0, 3], "dimens": [0, 3], "ringgsw": 0, "rlwe": 0, "dynam": 0, "techniqu": [0, 3, 7], "cryptocontext": [0, 4], "generatelutviafunct": 0, "f": 0, "messag": [0, 3], "getbeta": 0, "getmaxplaintextspac": 0, "getn": 0, "getq": 0, "keygen": [0, 3], "main": [0, 4], "getlength": [0, 7], "getmodulu": [0, 3], "member": [1, 6], "std128_lmkcdei": 1, "std128_ap": 1, "std128q": 1, "std128q_lmkcdei": 1, "std192q": 1, "std256q": 1, "std128_3": 1, "std128_3_lmkcdei": 1, "std128q_3": 1, "std128q_3_lmkcdei": 1, "std192q_3": 1, "std256q_3": 1, "std128_4": 1, "std128_4_lmkcdei": 1, "std128q_4": 1, "std128q_4_lmkcdei": 1, "std192q_4": 1, "std256q_4": 1, "signed_mod_test": 1, "1": [1, 3, 6], "23": 1, "7": 1, "13": 1, "14": 1, "19": 1, "20": 1, "8": [1, 6], "12": 1, "17": 1, "18": 1, "3": [1, 3, 6], "5": [1, 3, 6], "9": 1, "15": 1, "21": 1, "6": [1, 6], "10": [1, 3], "16": [1, 6], "22": 1, "properti": [1, 5, 6], "name": [1, 6], "valu": [1, 3, 6, 7], "invalid_method": 1, "ap": 1, "invalid_output": 1, "xor_fast": 1, "xnor_fast": 1, "clone": 2, "getlevel": [2, 7], "get": [2, 3, 7], "scale": [2, 3, 7], "perform": [2, 3, 4], "level": [2, 3], "getslot": [2, 7], "removeel": 2, "arg0": [2, 3, 5, 7], "remov": 2, "element": [2, 3], "from": [2, 3], "inner": [2, 3], "vector": [2, 3, 7], "given": [2, 3], "its": 2, "index": [2, 3], "setlevel": [2, 7], "setslot": [2, 7], "static": 3, "clearevalautomorphismkei": 3, "flush": 3, "evalautomorphismkei": 3, "cach": 3, "clearevalmultkei": 3, "evalmultkei": 3, "id": [3, 7], "str": [3, 5, 7], "correspond": 3, "privatekei": [3, 5], "singl": 3, "appropri": 3, "deserializeevalautomorphismkei": 3, "filenam": 3, "sertyp": 3, "serbinari": 3, "deseri": 3, "all": [3, 4], "serial": 3, "silent": 3, "replac": 3, "ani": 3, "exist": 3, "match": 3, "necessari": 3, "path": 3, "file": 3, "serjson": 3, "true": [3, 7], "success": 3, "deserializeevalmultkei": 3, "enabl": [3, 4], "featur": 3, "pkeschemefeatur": [3, 6], "particular": 3, "thi": [3, 7], "avail": 3, "i": [3, 4, 7], "defin": 3, "enum": [3, 4], "publickei": [3, 5], "public": [3, 4], "null": [3, 5], "failur": 3, "evaladd": 3, "ciphertext1": 3, "ciphertext2": 3, "homomorph": [3, 4], "addit": 3, "two": 3, "addend": 3, "new": [3, 7], "constant": 3, "float": [3, 7], "real": [3, 7], "support": [3, 7], "ckk": [3, 4, 7], "plaintex": 3, "evaladdinplac": 3, "In": 3, "place": 3, "contain": 3, "evaladdmut": 3, "mutabl": 3, "thei": 3, "chang": [3, 7], "dure": 3, "oper": [3, 4], "evaladdmutableinplac": 3, "evalatindex": 3, "rotat": 3, "posit": 3, "left": 3, "shift": 3, "neg": 3, "right": 3, "store": 3, "evalatindexkeygen": 3, "indexlist": 3, "privat": [3, 4], "ntru": 3, "Not": 3, "anymor": 3, "evalautomorphismkeygen": 3, "evalkeymap": 3, "automoph": 3, "automorph": 3, "comput": [3, 4], "evalbootstrap": 3, "numiter": 3, "either": 3, "fft": 3, "like": 3, "linear": 3, "iter": 3, "run": 3, "meta": 3, "bt": 3, "increas": 3, "initi": [3, 5], "algorithm": 3, "determin": 3, "experiment": 3, "unus": 3, "evalbootstrapkeygen": 3, "slot": 3, "babi": 3, "step": 3, "giant": 3, "strategi": 3, "permut": 3, "evalbootstrapsetup": 3, "levelbudget": 3, "dim1": 3, "correctionfactor": 3, "precomput": 3, "There": 3, "ar": [3, 5], "three": 3, "have": [3, 4], "specif": 3, "order": 3, "encod": [3, 7], "coeffici": 3, "decod": [3, 7], "conjug": 3, "both": [3, 5], "ftt": 3, "budget": 3, "amount": 3, "routin": 3, "decodingl": 3, "intern": 3, "rescal": 3, "improv": 3, "If": 3, "we": 3, "logic": 3, "when": 3, "native_s": 3, "64": [3, 6], "evalckkstofhew": 3, "numctxt": 3, "lweciphertext": [3, 4], "evalckkstofhewkeygen": 3, "keypair": [3, 4], "lwesk": 3, "lweprivatekei": [3, 4], "evalckkstofhewprecomput": 3, "evalckkstofhewsetup": 3, "schswchparam": 3, "evalchebyshevfunct": 3, "func": 3, "callabl": 3, "b": 3, "degre": 3, "calcul": [3, 7], "chebyshev": 3, "smooth": 3, "rang": 3, "approxim": 3, "lower": [3, 7], "bound": [3, 7], "argument": 3, "which": 3, "were": 3, "found": 3, "upper": [3, 7], "desir": 3, "evalchebyshevseri": 3, "polynomi": [3, 7], "interpol": 3, "map": 3, "transform": 3, "x": 3, "less": [3, 7], "than": [3, 7], "evalchebyshevserieslinear": 3, "naiv": 3, "otherwis": [3, 7], "evalchebyshevseriesp": 3, "paterson": 3, "stockmey": 3, "expans": 3, "evalcompareschemeswitch": 3, "numslot": 3, "plwe": 3, "scalesign": 3, "unit": 3, "evalcompareswitchprecomput": 3, "evalco": 3, "cosin": 3, "evaldivid": 3, "divis": 3, "where": 3, "evalfhewtockk": 3, "pmin": 3, "pmax": 3, "evalfhewtockkskeygen": 3, "l": 3, "evalfhewtockkssetup": 3, "cclwe": 3, "binfhecontext": [3, 4], "numslotsckk": 3, "25": 3, "evalfastrot": 3, "digit": 3, "implement": [3, 4], "hoist": 3, "pleas": 3, "refer": 3, "section": 3, "halevi": 3, "shoup": 3, "faster": 3, "helib": 3, "more": [3, 4], "detail": 3, "link": 3, "http": 3, "eprint": 3, "iacr": 3, "org": 3, "2018": 3, "244": 3, "appli": 3, "decompos": 3, "further": 3, "origin": 3, "benefit": 3, "independ": 3, "so": 3, "reus": 3, "multipl": 3, "differ": 3, "greatli": 3, "mani": 3, "same": 3, "happen": 3, "do": 3, "evalpermut": 3, "assum": 3, "requir": 3, "mai": 3, "abov": 3, "evalpermutebgstephoist": 3, "see": 3, "how": 3, "deal": 3, "issu": 3, "cyclotom": 3, "evalfastrotationprecomput": 3, "evalfastrotationext": 3, "addfirst": 3, "hybrid": [3, 6], "fast": 3, "extend": [3, 6], "crt": 3, "basi": 3, "q": 3, "c0": 3, "also": 3, "ignor": 3, "evalinnerproduct": 3, "batchsiz": 3, "product": 3, "pack": [3, 7], "evalsum": 3, "size": [3, 7], "batch": 3, "sum": 3, "evallogist": 3, "logist": 3, "exp": 3, "evalmaxschemeswitch": 3, "numvalu": 3, "evalmaxschemeswitchingalt": 3, "evalmerg": 3, "ciphertextvec": 3, "merg": 3, "assign": 3, "done": 3, "evalminschemeswitch": 3, "evalminschemeswitchingalt": 3, "evalmult": 3, "pair": 3, "relinear": 3, "multipli": 3, "multiplicand": 3, "evalmultandrelinear": 3, "follow": 3, "lowest": 3, "evalmultkeygen": 3, "evalmultkeysgen": 3, "evalmultskeygen": 3, "1st": 3, "": 3, "depth": 3, "2nd": 3, "etc": 3, "A": 3, "evalmultmut": 3, "evalmultmutableinplac": 3, "evalmultnorelin": 3, "without": [3, 4], "evalneg": 3, "negat": 3, "evalnegateinplac": 3, "evalpoli": 3, "repres": 3, "power": [3, 4], "seri": 3, "evalpolylinear": 3, "small": 3, "tree": 3, "evalpolyp": 3, "evalrot": 3, "under": 3, "hood": 3, "evalrotatekeygen": 3, "evalschemeswitchingkeygen": 3, "evalschemeswitchingsetup": 3, "evalsin": 3, "sine": 3, "evalsquar": 3, "effici": [3, 4], "squar": 3, "evalsquareinplac": 3, "evalsquaremut": 3, "evalsub": 3, "subtract": 3, "minuend": 3, "subtrahend": 3, "evalsubinplac": 3, "evalsubmut": 3, "evalsubmutableinplac": 3, "updat": 3, "compon": [3, 7], "evalsumcol": 3, "rowsiz": 3, "evalsumkeymap": 3, "column": 3, "matrix": 3, "work": [3, 7], "row": 3, "evalsumcolskeygen": 3, "evalsumkeygen": 3, "evalsumrow": 3, "subringdim": 3, "current": 3, "subr": 3, "full": 3, "evalsumrowskeygen": 3, "findautomorphismindex": 3, "idx": 3, "find": 3, "regular": 3, "findautomorphismindic": 3, "idxlist": 3, "getbinccforschemeswitch": 3, "getcyclotomicord": 3, "getdigits": 3, "getevalsumkeymap": 3, "summat": 3, "each": 3, "compos": 3, "sever": 3, "tag": 3, "getkeygenlevel": 3, "For": 3, "futur": 3, "getter": 3, "getmodulusckk": 3, "getplaintextmodulu": 3, "getringdimens": 3, "getscalingfactorr": 3, "retriev": 3, "factor": [3, 7], "fixedmanu": [3, 6], "alwai": 3, "flexibleauto": [3, 6], "whose": 3, "want": 3, "learn": 3, "start": 3, "tower": 3, "go": 3, "k": 3, "getscalingtechniqu": 3, "scalingtechniqu": [3, 6], "insertevalmultkei": 3, "evalkeyvec": 3, "evalkei": 3, "add": 3, "insertevalsumkei": 3, "keytag": 3, "intmpbootadd": 3, "sharepairvec": 3, "threshold": 3, "fhe": [3, 4, 6], "aggreg": 3, "mask": 3, "re": 3, "encryot": 3, "share": 3, "interact": 3, "multiparti": 3, "procedur": 3, "sharespairvec": 3, "h_0i": 3, "h_1i": 3, "ofparti": 3, "h_0": 3, "h_1": 3, "intmpbootadjustscal": 3, "prepar": 3, "multi": 3, "parti": 3, "intmpbootdecrypt": 3, "doe": 3, "part": 3, "protocol": 3, "common": [3, 4], "random": 3, "intmpbootencrypt": 3, "sharepair": 3, "lead": 3, "final": 3, "sharespair": 3, "intmpbootrandomelementgen": 3, "you": 3, "provid": [3, 4], "keyswitchgen": 3, "oldprivatekei": 3, "newprivatekei": 3, "keyswitch": [3, 6], "secrei": 3, "makeckkspackedplaintext": 3, "complex": [3, 7], "scaledeg": 3, "parmtyp": 3, "arithmet": 3, "BE": 3, "deprec": 3, "THE": 3, "construct": 3, "ckkspackedencod": 3, "accept": 3, "version": 3, "makeckksplaintext": 3, "makecoefpackedplaintext": 3, "noisescaledeg": 3, "coefpackedencod": 3, "t": 3, "makepackedplaintext": 3, "packedencod": 3, "makestringplaintext": 3, "stringencod": 3, "string": 3, "modreduc": 3, "bgv": [3, 4], "reduc": 3, "modreduceinplac": 3, "multiaddevalkei": 3, "evalkey1": 3, "evalkey2": 3, "keyid": 3, "prior": 3, "identifi": 3, "join": 3, "multiaddevalmultkei": 3, "multiaddevalsumkei": 3, "evalkeymap1": 3, "evalkeymap2": 3, "neew": 3, "multievalsumkeygen": 3, "multikeyswitchgen": 3, "originalprivatekei": 3, "multimultevalkei": 3, "partial": 3, "multipartydecryptfus": 3, "combin": 3, "clear": 3, "partialciphertextvec": 3, "multipartydecryptlead": 3, "client": 3, "multipartydecryptmain": 3, "except": 3, "one": 3, "multipartykeygen": 3, "makespars": 3, "deriv": 3, "previou": 3, "BY": 3, "proxi": 3, "star": 3, "topologi": 3, "includ": [3, 4], "privatekeyvec": 3, "FOR": 3, "debuggin": 3, "purpos": 3, "IN": 3, "reencrypt": 3, "mechan": 3, "pre": [3, 6], "recipi": 3, "rekeygen": 3, "newpublickei": 3, "produc": 3, "eval": 3, "withour": 3, "relinearizeinplac": 3, "per": 3, "alia": 3, "becaus": 3, "rescaleinplac": 3, "serializeevalautomorphismkei": 3, "evalauto": 3, "empti": 3, "mean": 3, "serializeevalmultkei": 3, "them": 3, "setkeygenlevel": 3, "setter": 3, "get_ptr": 3, "fulli": 4, "cryptograph": 4, "primit": 4, "data": 4, "access": 4, "open": 4, "sourc": 4, "librari": 4, "bfv": [4, 7], "built": 4, "wrapper": 4, "capabl": 4, "c": 4, "It": 4, "friendli": 4, "interfac": 4, "develop": 4, "while": 4, "keep": 4, "pke": 4, "binfh": 4, "getkeytag": 5, "setkeytag": 5, "good": 5, "check": [5, 7], "non": 5, "correctli": 5, "secretkei": 5, "invalid_schem": 6, "ckksrns_scheme": 6, "bfvrns_scheme": 6, "bgvrns_scheme": 6, "leveledsh": 6, "advancedsh": 6, "32": 6, "128": 6, "fixedauto": 6, "flexibleautoext": 6, "norescal": 6, "invalid_rs_techniqu": 6, "keyswitchtechniqu": 6, "invalid_ks_tech": 6, "bv": 6, "secretkeydist": 6, "gaussian": 6, "uniform_ternari": 6, "sparse_ternari": 6, "proxyreencryptionmod": 6, "not_set": 6, "indcpa": 6, "fixed_noise_hra": 6, "noise_flooding_hra": 6, "divide_and_round_hra": 6, "multipartymod": 6, "invalid_multiparty_mod": 6, "fixed_noise_multiparti": 6, "noise_flooding_multiparti": 6, "executionmod": 6, "exec_evalu": 6, "exec_noise_estim": 6, "decryptionnoisemod": 6, "fixed_noise_decrypt": 6, "noise_flooding_decrypt": 6, "encryptiontechniqu": 6, "standard": 6, "multiplicationtechniqu": 6, "behz": 6, "hp": 6, "hpspoverq": 6, "hpspoverqlevel": 6, "securitylevel": 6, "hestd_128_class": 6, "hestd_192_class": 6, "hestd_256_class": 6, "hestd_notset": 6, "getckkspackedvalu": 7, "length": 7, "term": 7, "getlogerror": 7, "getlogprecis": 7, "getnoisescaledeg": 7, "getpackedvalu": 7, "getrealpackedvalu": 7, "doubl": 7, "getscalingfactor": 7, "getschemeid": 7, "getstringvalu": 7, "highbound": 7, "must": 7, "floor": 7, "isencod": 7, "lowbound": 7, "greater": 7, "setformat": 7, "fmt": 7, "format": 7, "allow": 7, "setintvectorvalu": 7, "setlength": 7, "newsiz": 7, "resiz": 7, "coefpack": 7, "setnoisescaledeg": 7, "setscalingfactor": 7, "sf": 7, "setstringvalu": 7}, "objects": {"openfhe": [[1, 0, 1, "", "BINFHE_METHOD"], [1, 0, 1, "", "BINFHE_OUTPUT"], [1, 0, 1, "", "BINFHE_PARAMSET"], [1, 0, 1, "", "BINGATE"], [0, 0, 1, "", "BinFHEContext"], [2, 0, 1, "", "Ciphertext"], [6, 0, 1, "", "DecryptionNoiseMode"], [6, 0, 1, "", "EncryptionTechnique"], [6, 0, 1, "", "ExecutionMode"], [5, 0, 1, "", "KeyPair"], [6, 0, 1, "", "KeySwitchTechnique"], [0, 0, 1, "", "LWECiphertext"], [0, 0, 1, "", "LWEPrivateKey"], [6, 0, 1, "", "MultipartyMode"], [6, 0, 1, "", "MultiplicationTechnique"], [6, 0, 1, "", "PKESchemeFeature"], [7, 0, 1, "", "Plaintext"], [5, 0, 1, "", "PrivateKey"], [6, 0, 1, "", "ProxyReEncryptionMode"], [5, 0, 1, "", "PublicKey"], [6, 0, 1, "", "SCHEME"], [6, 0, 1, "", "ScalingTechnique"], [6, 0, 1, "", "SecretKeyDist"], [6, 0, 1, "", "SecurityLevel"]], "openfhe.BINFHE_METHOD": [[1, 1, 1, "", "AP"], [1, 1, 1, "", "GINX"], [1, 1, 1, "", "INVALID_METHOD"], [1, 1, 1, "", "LMKCDEY"], [1, 2, 1, "", "name"], [1, 2, 1, "", "value"]], "openfhe.BINFHE_OUTPUT": [[1, 1, 1, "", "BOOTSTRAPPED"], [1, 1, 1, "", "FRESH"], [1, 1, 1, "", "INVALID_OUTPUT"], [1, 2, 1, "", "name"], [1, 2, 1, "", "value"]], "openfhe.BINFHE_PARAMSET": [[1, 1, 1, "", "MEDIUM"], [1, 1, 1, "", "SIGNED_MOD_TEST"], [1, 1, 1, "", "STD128"], [1, 1, 1, "", "STD128Q"], [1, 1, 1, "", "STD128Q_3"], [1, 1, 1, "", "STD128Q_3_LMKCDEY"], [1, 1, 1, "", "STD128Q_4"], [1, 1, 1, "", "STD128Q_4_LMKCDEY"], [1, 1, 1, "", "STD128Q_LMKCDEY"], [1, 1, 1, "", "STD128_3"], [1, 1, 1, "", "STD128_3_LMKCDEY"], [1, 1, 1, "", "STD128_4"], [1, 1, 1, "", "STD128_4_LMKCDEY"], [1, 1, 1, "", "STD128_AP"], [1, 1, 1, "", "STD128_LMKCDEY"], [1, 1, 1, "", "STD192"], [1, 1, 1, "", "STD192Q"], [1, 1, 1, "", "STD192Q_3"], [1, 1, 1, "", "STD192Q_4"], [1, 1, 1, "", "STD256"], [1, 1, 1, "", "STD256Q"], [1, 1, 1, "", "STD256Q_3"], [1, 1, 1, "", "STD256Q_4"], [1, 1, 1, "", "TOY"], [1, 2, 1, "", "name"], [1, 2, 1, "", "value"]], "openfhe.BINGATE": [[1, 1, 1, "", "AND"], [1, 1, 1, "", "NAND"], [1, 1, 1, "", "NOR"], [1, 1, 1, "", "OR"], [1, 1, 1, "", "XNOR"], [1, 1, 1, "", "XNOR_FAST"], [1, 1, 1, "", "XOR"], [1, 1, 1, "", "XOR_FAST"], [1, 2, 1, "", "name"], [1, 2, 1, "", "value"]], "openfhe.BinFHEContext": [[0, 3, 1, "", "BTKeyGen"], [0, 3, 1, "", "Decrypt"], [0, 3, 1, "", "Encrypt"], [0, 3, 1, "", "EvalBinGate"], [0, 3, 1, "", "EvalDecomp"], [0, 3, 1, "", "EvalFloor"], [0, 3, 1, "", "EvalFunc"], [0, 3, 1, "", "EvalNOT"], [0, 3, 1, "", "EvalSign"], [0, 3, 1, "", "GenerateBinFHEContext"], [0, 3, 1, "", "GenerateLUTviaFunction"], [0, 3, 1, "", "GetBeta"], [0, 3, 1, "", "GetMaxPlaintextSpace"], [0, 3, 1, "", "Getn"], [0, 3, 1, "", "Getq"], [0, 3, 1, "", "KeyGen"]], "openfhe.Ciphertext": [[2, 3, 1, "", "Clone"], [2, 3, 1, "", "GetLevel"], [2, 3, 1, "", "GetSlots"], [2, 3, 1, "", "RemoveElement"], [2, 3, 1, "", "SetLevel"], [2, 3, 1, "", "SetSlots"]], "openfhe.DecryptionNoiseMode": [[6, 1, 1, "", "FIXED_NOISE_DECRYPT"], [6, 1, 1, "", "NOISE_FLOODING_DECRYPT"], [6, 2, 1, "", "name"], [6, 2, 1, "", "value"]], "openfhe.EncryptionTechnique": [[6, 1, 1, "", "EXTENDED"], [6, 1, 1, "", "STANDARD"], [6, 2, 1, "", "name"], [6, 2, 1, "", "value"]], "openfhe.ExecutionMode": [[6, 1, 1, "", "EXEC_EVALUATION"], [6, 1, 1, "", "EXEC_NOISE_ESTIMATION"], [6, 2, 1, "", "name"], [6, 2, 1, "", "value"]], "openfhe.KeyPair": [[5, 3, 1, "", "good"], [5, 2, 1, "", "publicKey"], [5, 2, 1, "", "secretKey"]], "openfhe.KeySwitchTechnique": [[6, 1, 1, "", "BV"], [6, 1, 1, "", "HYBRID"], [6, 1, 1, "", "INVALID_KS_TECH"], [6, 2, 1, "", "name"], [6, 2, 1, "", "value"]], "openfhe.LWECiphertext": [[0, 3, 1, "", "GetLength"], [0, 3, 1, "", "GetModulus"]], "openfhe.LWEPrivateKey": [[0, 3, 1, "", "GetLength"]], "openfhe.MultipartyMode": [[6, 1, 1, "", "FIXED_NOISE_MULTIPARTY"], [6, 1, 1, "", "INVALID_MULTIPARTY_MODE"], [6, 1, 1, "", "NOISE_FLOODING_MULTIPARTY"], [6, 2, 1, "", "name"], [6, 2, 1, "", "value"]], "openfhe.MultiplicationTechnique": [[6, 1, 1, "", "BEHZ"], [6, 1, 1, "", "HPS"], [6, 1, 1, "", "HPSPOVERQ"], [6, 1, 1, "", "HPSPOVERQLEVELED"], [6, 2, 1, "", "name"], [6, 2, 1, "", "value"]], "openfhe.PKESchemeFeature": [[6, 1, 1, "", "ADVANCEDSHE"], [6, 1, 1, "", "FHE"], [6, 1, 1, "", "KEYSWITCH"], [6, 1, 1, "", "LEVELEDSHE"], [6, 1, 1, "", "MULTIPARTY"], [6, 1, 1, "", "PKE"], [6, 1, 1, "", "PRE"], [6, 1, 1, "", "SCHEMESWITCH"], [6, 2, 1, "", "name"], [6, 2, 1, "", "value"]], "openfhe.Plaintext": [[7, 3, 1, "", "Decode"], [7, 3, 1, "", "Encode"], [7, 3, 1, "", "GetCKKSPackedValue"], [7, 3, 1, "", "GetLength"], [7, 3, 1, "", "GetLevel"], [7, 3, 1, "", "GetLogError"], [7, 3, 1, "", "GetLogPrecision"], [7, 3, 1, "", "GetNoiseScaleDeg"], [7, 3, 1, "", "GetPackedValue"], [7, 3, 1, "", "GetRealPackedValue"], [7, 3, 1, "", "GetScalingFactor"], [7, 3, 1, "", "GetSchemeID"], [7, 3, 1, "", "GetSlots"], [7, 3, 1, "", "GetStringValue"], [7, 3, 1, "", "HighBound"], [7, 3, 1, "", "IsEncoded"], [7, 3, 1, "", "LowBound"], [7, 3, 1, "", "SetFormat"], [7, 3, 1, "", "SetIntVectorValue"], [7, 3, 1, "", "SetLength"], [7, 3, 1, "", "SetLevel"], [7, 3, 1, "", "SetNoiseScaleDeg"], [7, 3, 1, "", "SetScalingFactor"], [7, 3, 1, "", "SetSlots"], [7, 3, 1, "", "SetStringValue"]], "openfhe.PrivateKey": [[5, 3, 1, "", "GetKeyTag"], [5, 3, 1, "", "SetKeyTag"]], "openfhe.ProxyReEncryptionMode": [[6, 1, 1, "", "DIVIDE_AND_ROUND_HRA"], [6, 1, 1, "", "FIXED_NOISE_HRA"], [6, 1, 1, "", "INDCPA"], [6, 1, 1, "", "NOISE_FLOODING_HRA"], [6, 1, 1, "", "NOT_SET"], [6, 2, 1, "", "name"], [6, 2, 1, "", "value"]], "openfhe.PublicKey": [[5, 3, 1, "", "GetKeyTag"], [5, 3, 1, "", "SetKeyTag"]], "openfhe.SCHEME": [[6, 1, 1, "", "BFVRNS_SCHEME"], [6, 1, 1, "", "BGVRNS_SCHEME"], [6, 1, 1, "", "CKKSRNS_SCHEME"], [6, 1, 1, "", "INVALID_SCHEME"], [6, 2, 1, "", "name"], [6, 2, 1, "", "value"]], "openfhe.ScalingTechnique": [[6, 1, 1, "", "FIXEDAUTO"], [6, 1, 1, "", "FIXEDMANUAL"], [6, 1, 1, "", "FLEXIBLEAUTO"], [6, 1, 1, "", "FLEXIBLEAUTOEXT"], [6, 1, 1, "", "INVALID_RS_TECHNIQUE"], [6, 1, 1, "", "NORESCALE"], [6, 2, 1, "", "name"], [6, 2, 1, "", "value"]], "openfhe.SecretKeyDist": [[6, 1, 1, "", "GAUSSIAN"], [6, 1, 1, "", "SPARSE_TERNARY"], [6, 1, 1, "", "UNIFORM_TERNARY"], [6, 2, 1, "", "name"], [6, 2, 1, "", "value"]], "openfhe.SecurityLevel": [[6, 1, 1, "", "HEStd_128_classic"], [6, 1, 1, "", "HEStd_192_classic"], [6, 1, 1, "", "HEStd_256_classic"], [6, 1, 1, "", "HEStd_NotSet"], [6, 2, 1, "", "name"], [6, 2, 1, "", "value"]]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:property", "3": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"]}, "titleterms": {"binfhecontext": 0, "lweciphertext": 0, "lweprivatekei": 0, "binfh": 1, "enum": [1, 6], "paramet": 1, "set": 1, "binfhe_method": 1, "output": 1, "binari": 1, "gate": 1, "ciphertext": 2, "cryptocontext": 3, "welcom": 4, "openfh": 4, "python": 4, "": 4, "document": 4, "api": 4, "refer": 4, "public": 5, "kei": [5, 6], "privat": 5, "keypair": 5, "pke": 6, "scheme": 6, "type": 6, "featur": 6, "scale": 6, "techniqu": 6, "switch": 6, "secret": 6, "dist": 6, "proxi": 6, "reencrypt": 6, "mode": 6, "multiparti": 6, "execut": 6, "decrypt": 6, "nois": 6, "encrypt": 6, "multipl": 6, "secur": 6, "level": 6, "plaintext": 7}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 58}, "alltitles": {"BinFHEContext": [[0, "binfhecontext"]], "LWECiphertext": [[0, "lweciphertext"]], "LWEPrivateKey": [[0, "lweprivatekey"]], "BinFHE enums": [[1, "binfhe-enums"]], "Parameter Set": [[1, "parameter-set"]], "BINFHE_METHOD": [[1, "binfhe-method"]], "BinFHE Output": [[1, "binfhe-output"]], "Binary Gates": [[1, "binary-gates"]], "Ciphertext": [[2, "ciphertext"]], "CryptoContext": [[3, "cryptocontext"]], "Welcome to OpenFHE - Python\u2019s documentation!": [[4, "welcome-to-openfhe-python-s-documentation"]], "OpenFHE - Python": [[4, "openfhe-python"]], "API Reference:": [[4, null]], "Public Key": [[5, "public-key"]], "Private Key": [[5, "private-key"]], "KeyPair": [[5, "keypair"]], "PKE enums": [[6, "pke-enums"]], "Scheme Types": [[6, "scheme-types"]], "PKE Scheme Features": [[6, "pke-scheme-features"]], "Scaling Techniques": [[6, "scaling-techniques"]], "Key Switching Techniques": [[6, "key-switching-techniques"]], "Secret Key Dist": [[6, "secret-key-dist"]], "Proxy Reencryption Mode": [[6, "proxy-reencryption-mode"]], "Multiparty Mode": [[6, "multiparty-mode"]], "Execution Mode": [[6, "execution-mode"]], "Decryption Noise Mode": [[6, "decryption-noise-mode"]], "Encryption Technique": [[6, "encryption-technique"]], "Multiplication Technique": [[6, "multiplication-technique"]], "Security Level": [[6, "security-level"]], "Plaintext": [[7, "plaintext"]]}, "indexentries": {"btkeygen() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.BTKeyGen"]], "binfhecontext (class in openfhe)": [[0, "openfhe.BinFHEContext"]], "decrypt() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.Decrypt"]], "encrypt() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.Encrypt"]], "evalbingate() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.EvalBinGate"]], "evaldecomp() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.EvalDecomp"]], "evalfloor() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.EvalFloor"]], "evalfunc() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.EvalFunc"]], "evalnot() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.EvalNOT"]], "evalsign() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.EvalSign"]], "generatebinfhecontext() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.GenerateBinFHEContext"]], "generatelutviafunction() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.GenerateLUTviaFunction"]], "getbeta() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.GetBeta"]], "getlength() (openfhe.lweciphertext method)": [[0, "openfhe.LWECiphertext.GetLength"]], "getlength() (openfhe.lweprivatekey method)": [[0, "openfhe.LWEPrivateKey.GetLength"]], "getmaxplaintextspace() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.GetMaxPlaintextSpace"]], "getmodulus() (openfhe.lweciphertext method)": [[0, "openfhe.LWECiphertext.GetModulus"]], "getn() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.Getn"]], "getq() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.Getq"]], "keygen() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.KeyGen"]], "lweciphertext (class in openfhe)": [[0, "openfhe.LWECiphertext"]], "lweprivatekey (class in openfhe)": [[0, "openfhe.LWEPrivateKey"]], "and (openfhe.bingate attribute)": [[1, "openfhe.BINGATE.AND"]], "ap (openfhe.binfhe_method attribute)": [[1, "openfhe.BINFHE_METHOD.AP"]], "binfhe_method (class in openfhe)": [[1, "openfhe.BINFHE_METHOD"]], "binfhe_output (class in openfhe)": [[1, "openfhe.BINFHE_OUTPUT"]], "binfhe_paramset (class in openfhe)": [[1, "openfhe.BINFHE_PARAMSET"]], "bingate (class in openfhe)": [[1, "openfhe.BINGATE"]], "bootstrapped (openfhe.binfhe_output attribute)": [[1, "openfhe.BINFHE_OUTPUT.BOOTSTRAPPED"]], "fresh (openfhe.binfhe_output attribute)": [[1, "openfhe.BINFHE_OUTPUT.FRESH"]], "ginx (openfhe.binfhe_method attribute)": [[1, "openfhe.BINFHE_METHOD.GINX"]], "invalid_method (openfhe.binfhe_method attribute)": [[1, "openfhe.BINFHE_METHOD.INVALID_METHOD"]], "invalid_output (openfhe.binfhe_output attribute)": [[1, "openfhe.BINFHE_OUTPUT.INVALID_OUTPUT"]], "lmkcdey (openfhe.binfhe_method attribute)": [[1, "openfhe.BINFHE_METHOD.LMKCDEY"]], "medium (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.MEDIUM"]], "nand (openfhe.bingate attribute)": [[1, "openfhe.BINGATE.NAND"]], "nor (openfhe.bingate attribute)": [[1, "openfhe.BINGATE.NOR"]], "or (openfhe.bingate attribute)": [[1, "openfhe.BINGATE.OR"]], "signed_mod_test (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.SIGNED_MOD_TEST"]], "std128 (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD128"]], "std128q (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD128Q"]], "std128q_3 (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD128Q_3"]], "std128q_3_lmkcdey (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD128Q_3_LMKCDEY"]], "std128q_4 (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD128Q_4"]], "std128q_4_lmkcdey (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD128Q_4_LMKCDEY"]], "std128q_lmkcdey (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD128Q_LMKCDEY"]], "std128_3 (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD128_3"]], "std128_3_lmkcdey (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD128_3_LMKCDEY"]], "std128_4 (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD128_4"]], "std128_4_lmkcdey (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD128_4_LMKCDEY"]], "std128_ap (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD128_AP"]], "std128_lmkcdey (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD128_LMKCDEY"]], "std192 (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD192"]], "std192q (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD192Q"]], "std192q_3 (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD192Q_3"]], "std192q_4 (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD192Q_4"]], "std256 (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD256"]], "std256q (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD256Q"]], "std256q_3 (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD256Q_3"]], "std256q_4 (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD256Q_4"]], "toy (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.TOY"]], "xnor (openfhe.bingate attribute)": [[1, "openfhe.BINGATE.XNOR"]], "xnor_fast (openfhe.bingate attribute)": [[1, "openfhe.BINGATE.XNOR_FAST"]], "xor (openfhe.bingate attribute)": [[1, "openfhe.BINGATE.XOR"]], "xor_fast (openfhe.bingate attribute)": [[1, "openfhe.BINGATE.XOR_FAST"]], "name (openfhe.binfhe_method property)": [[1, "openfhe.BINFHE_METHOD.name"]], "name (openfhe.binfhe_output property)": [[1, "openfhe.BINFHE_OUTPUT.name"]], "name (openfhe.binfhe_paramset property)": [[1, "openfhe.BINFHE_PARAMSET.name"]], "name (openfhe.bingate property)": [[1, "openfhe.BINGATE.name"]], "value (openfhe.binfhe_method property)": [[1, "openfhe.BINFHE_METHOD.value"]], "value (openfhe.binfhe_output property)": [[1, "openfhe.BINFHE_OUTPUT.value"]], "value (openfhe.binfhe_paramset property)": [[1, "openfhe.BINFHE_PARAMSET.value"]], "value (openfhe.bingate property)": [[1, "openfhe.BINGATE.value"]], "ciphertext (class in openfhe)": [[2, "openfhe.Ciphertext"]], "clone() (openfhe.ciphertext method)": [[2, "openfhe.Ciphertext.Clone"]], "getlevel() (openfhe.ciphertext method)": [[2, "openfhe.Ciphertext.GetLevel"]], "getslots() (openfhe.ciphertext method)": [[2, "openfhe.Ciphertext.GetSlots"]], "removeelement() (openfhe.ciphertext method)": [[2, "openfhe.Ciphertext.RemoveElement"]], "setlevel() (openfhe.ciphertext method)": [[2, "openfhe.Ciphertext.SetLevel"]], "setslots() (openfhe.ciphertext method)": [[2, "openfhe.Ciphertext.SetSlots"]], "getkeytag() (openfhe.privatekey method)": [[5, "openfhe.PrivateKey.GetKeyTag"]], "getkeytag() (openfhe.publickey method)": [[5, "openfhe.PublicKey.GetKeyTag"]], "keypair (class in openfhe)": [[5, "openfhe.KeyPair"]], "privatekey (class in openfhe)": [[5, "openfhe.PrivateKey"]], "publickey (class in openfhe)": [[5, "openfhe.PublicKey"]], "setkeytag() (openfhe.privatekey method)": [[5, "openfhe.PrivateKey.SetKeyTag"]], "setkeytag() (openfhe.publickey method)": [[5, "openfhe.PublicKey.SetKeyTag"]], "good() (openfhe.keypair method)": [[5, "openfhe.KeyPair.good"]], "publickey (openfhe.keypair property)": [[5, "openfhe.KeyPair.publicKey"]], "secretkey (openfhe.keypair property)": [[5, "openfhe.KeyPair.secretKey"]], "advancedshe (openfhe.pkeschemefeature attribute)": [[6, "openfhe.PKESchemeFeature.ADVANCEDSHE"]], "behz (openfhe.multiplicationtechnique attribute)": [[6, "openfhe.MultiplicationTechnique.BEHZ"]], "bfvrns_scheme (openfhe.scheme attribute)": [[6, "openfhe.SCHEME.BFVRNS_SCHEME"]], "bgvrns_scheme (openfhe.scheme attribute)": [[6, "openfhe.SCHEME.BGVRNS_SCHEME"]], "bv (openfhe.keyswitchtechnique attribute)": [[6, "openfhe.KeySwitchTechnique.BV"]], "ckksrns_scheme (openfhe.scheme attribute)": [[6, "openfhe.SCHEME.CKKSRNS_SCHEME"]], "divide_and_round_hra (openfhe.proxyreencryptionmode attribute)": [[6, "openfhe.ProxyReEncryptionMode.DIVIDE_AND_ROUND_HRA"]], "decryptionnoisemode (class in openfhe)": [[6, "openfhe.DecryptionNoiseMode"]], "exec_evaluation (openfhe.executionmode attribute)": [[6, "openfhe.ExecutionMode.EXEC_EVALUATION"]], "exec_noise_estimation (openfhe.executionmode attribute)": [[6, "openfhe.ExecutionMode.EXEC_NOISE_ESTIMATION"]], "extended (openfhe.encryptiontechnique attribute)": [[6, "openfhe.EncryptionTechnique.EXTENDED"]], "encryptiontechnique (class in openfhe)": [[6, "openfhe.EncryptionTechnique"]], "executionmode (class in openfhe)": [[6, "openfhe.ExecutionMode"]], "fhe (openfhe.pkeschemefeature attribute)": [[6, "openfhe.PKESchemeFeature.FHE"]], "fixedauto (openfhe.scalingtechnique attribute)": [[6, "openfhe.ScalingTechnique.FIXEDAUTO"]], "fixedmanual (openfhe.scalingtechnique attribute)": [[6, "openfhe.ScalingTechnique.FIXEDMANUAL"]], "fixed_noise_decrypt (openfhe.decryptionnoisemode attribute)": [[6, "openfhe.DecryptionNoiseMode.FIXED_NOISE_DECRYPT"]], "fixed_noise_hra (openfhe.proxyreencryptionmode attribute)": [[6, "openfhe.ProxyReEncryptionMode.FIXED_NOISE_HRA"]], "fixed_noise_multiparty (openfhe.multipartymode attribute)": [[6, "openfhe.MultipartyMode.FIXED_NOISE_MULTIPARTY"]], "flexibleauto (openfhe.scalingtechnique attribute)": [[6, "openfhe.ScalingTechnique.FLEXIBLEAUTO"]], "flexibleautoext (openfhe.scalingtechnique attribute)": [[6, "openfhe.ScalingTechnique.FLEXIBLEAUTOEXT"]], "gaussian (openfhe.secretkeydist attribute)": [[6, "openfhe.SecretKeyDist.GAUSSIAN"]], "hestd_128_classic (openfhe.securitylevel attribute)": [[6, "openfhe.SecurityLevel.HEStd_128_classic"]], "hestd_192_classic (openfhe.securitylevel attribute)": [[6, "openfhe.SecurityLevel.HEStd_192_classic"]], "hestd_256_classic (openfhe.securitylevel attribute)": [[6, "openfhe.SecurityLevel.HEStd_256_classic"]], "hestd_notset (openfhe.securitylevel attribute)": [[6, "openfhe.SecurityLevel.HEStd_NotSet"]], "hps (openfhe.multiplicationtechnique attribute)": [[6, "openfhe.MultiplicationTechnique.HPS"]], "hpspoverq (openfhe.multiplicationtechnique attribute)": [[6, "openfhe.MultiplicationTechnique.HPSPOVERQ"]], "hpspoverqleveled (openfhe.multiplicationtechnique attribute)": [[6, "openfhe.MultiplicationTechnique.HPSPOVERQLEVELED"]], "hybrid (openfhe.keyswitchtechnique attribute)": [[6, "openfhe.KeySwitchTechnique.HYBRID"]], "indcpa (openfhe.proxyreencryptionmode attribute)": [[6, "openfhe.ProxyReEncryptionMode.INDCPA"]], "invalid_ks_tech (openfhe.keyswitchtechnique attribute)": [[6, "openfhe.KeySwitchTechnique.INVALID_KS_TECH"]], "invalid_multiparty_mode (openfhe.multipartymode attribute)": [[6, "openfhe.MultipartyMode.INVALID_MULTIPARTY_MODE"]], "invalid_rs_technique (openfhe.scalingtechnique attribute)": [[6, "openfhe.ScalingTechnique.INVALID_RS_TECHNIQUE"]], "invalid_scheme (openfhe.scheme attribute)": [[6, "openfhe.SCHEME.INVALID_SCHEME"]], "keyswitch (openfhe.pkeschemefeature attribute)": [[6, "openfhe.PKESchemeFeature.KEYSWITCH"]], "keyswitchtechnique (class in openfhe)": [[6, "openfhe.KeySwitchTechnique"]], "leveledshe (openfhe.pkeschemefeature attribute)": [[6, "openfhe.PKESchemeFeature.LEVELEDSHE"]], "multiparty (openfhe.pkeschemefeature attribute)": [[6, "openfhe.PKESchemeFeature.MULTIPARTY"]], "multipartymode (class in openfhe)": [[6, "openfhe.MultipartyMode"]], "multiplicationtechnique (class in openfhe)": [[6, "openfhe.MultiplicationTechnique"]], "noise_flooding_decrypt (openfhe.decryptionnoisemode attribute)": [[6, "openfhe.DecryptionNoiseMode.NOISE_FLOODING_DECRYPT"]], "noise_flooding_hra (openfhe.proxyreencryptionmode attribute)": [[6, "openfhe.ProxyReEncryptionMode.NOISE_FLOODING_HRA"]], "noise_flooding_multiparty (openfhe.multipartymode attribute)": [[6, "openfhe.MultipartyMode.NOISE_FLOODING_MULTIPARTY"]], "norescale (openfhe.scalingtechnique attribute)": [[6, "openfhe.ScalingTechnique.NORESCALE"]], "not_set (openfhe.proxyreencryptionmode attribute)": [[6, "openfhe.ProxyReEncryptionMode.NOT_SET"]], "pke (openfhe.pkeschemefeature attribute)": [[6, "openfhe.PKESchemeFeature.PKE"]], "pkeschemefeature (class in openfhe)": [[6, "openfhe.PKESchemeFeature"]], "pre (openfhe.pkeschemefeature attribute)": [[6, "openfhe.PKESchemeFeature.PRE"]], "proxyreencryptionmode (class in openfhe)": [[6, "openfhe.ProxyReEncryptionMode"]], "scheme (class in openfhe)": [[6, "openfhe.SCHEME"]], "schemeswitch (openfhe.pkeschemefeature attribute)": [[6, "openfhe.PKESchemeFeature.SCHEMESWITCH"]], "sparse_ternary (openfhe.secretkeydist attribute)": [[6, "openfhe.SecretKeyDist.SPARSE_TERNARY"]], "standard (openfhe.encryptiontechnique attribute)": [[6, "openfhe.EncryptionTechnique.STANDARD"]], "scalingtechnique (class in openfhe)": [[6, "openfhe.ScalingTechnique"]], "secretkeydist (class in openfhe)": [[6, "openfhe.SecretKeyDist"]], "securitylevel (class in openfhe)": [[6, "openfhe.SecurityLevel"]], "uniform_ternary (openfhe.secretkeydist attribute)": [[6, "openfhe.SecretKeyDist.UNIFORM_TERNARY"]], "name (openfhe.decryptionnoisemode property)": [[6, "openfhe.DecryptionNoiseMode.name"]], "name (openfhe.encryptiontechnique property)": [[6, "openfhe.EncryptionTechnique.name"]], "name (openfhe.executionmode property)": [[6, "openfhe.ExecutionMode.name"]], "name (openfhe.keyswitchtechnique property)": [[6, "openfhe.KeySwitchTechnique.name"]], "name (openfhe.multipartymode property)": [[6, "openfhe.MultipartyMode.name"]], "name (openfhe.multiplicationtechnique property)": [[6, "openfhe.MultiplicationTechnique.name"]], "name (openfhe.pkeschemefeature property)": [[6, "openfhe.PKESchemeFeature.name"]], "name (openfhe.proxyreencryptionmode property)": [[6, "openfhe.ProxyReEncryptionMode.name"]], "name (openfhe.scheme property)": [[6, "openfhe.SCHEME.name"]], "name (openfhe.scalingtechnique property)": [[6, "openfhe.ScalingTechnique.name"]], "name (openfhe.secretkeydist property)": [[6, "openfhe.SecretKeyDist.name"]], "name (openfhe.securitylevel property)": [[6, "openfhe.SecurityLevel.name"]], "value (openfhe.decryptionnoisemode property)": [[6, "openfhe.DecryptionNoiseMode.value"]], "value (openfhe.encryptiontechnique property)": [[6, "openfhe.EncryptionTechnique.value"]], "value (openfhe.executionmode property)": [[6, "openfhe.ExecutionMode.value"]], "value (openfhe.keyswitchtechnique property)": [[6, "openfhe.KeySwitchTechnique.value"]], "value (openfhe.multipartymode property)": [[6, "openfhe.MultipartyMode.value"]], "value (openfhe.multiplicationtechnique property)": [[6, "openfhe.MultiplicationTechnique.value"]], "value (openfhe.pkeschemefeature property)": [[6, "openfhe.PKESchemeFeature.value"]], "value (openfhe.proxyreencryptionmode property)": [[6, "openfhe.ProxyReEncryptionMode.value"]], "value (openfhe.scheme property)": [[6, "openfhe.SCHEME.value"]], "value (openfhe.scalingtechnique property)": [[6, "openfhe.ScalingTechnique.value"]], "value (openfhe.secretkeydist property)": [[6, "openfhe.SecretKeyDist.value"]], "value (openfhe.securitylevel property)": [[6, "openfhe.SecurityLevel.value"]], "decode() (openfhe.plaintext method)": [[7, "openfhe.Plaintext.Decode"]], "encode() (openfhe.plaintext method)": [[7, "openfhe.Plaintext.Encode"]], "getckkspackedvalue() (openfhe.plaintext method)": [[7, "openfhe.Plaintext.GetCKKSPackedValue"]], "getlength() (openfhe.plaintext method)": [[7, "openfhe.Plaintext.GetLength"]], "getlevel() (openfhe.plaintext method)": [[7, "openfhe.Plaintext.GetLevel"]], "getlogerror() (openfhe.plaintext method)": [[7, "openfhe.Plaintext.GetLogError"]], "getlogprecision() (openfhe.plaintext method)": [[7, "openfhe.Plaintext.GetLogPrecision"]], "getnoisescaledeg() (openfhe.plaintext method)": [[7, "openfhe.Plaintext.GetNoiseScaleDeg"]], "getpackedvalue() (openfhe.plaintext method)": [[7, "openfhe.Plaintext.GetPackedValue"]], "getrealpackedvalue() (openfhe.plaintext method)": [[7, "openfhe.Plaintext.GetRealPackedValue"]], "getscalingfactor() (openfhe.plaintext method)": [[7, "openfhe.Plaintext.GetScalingFactor"]], "getschemeid() (openfhe.plaintext method)": [[7, "openfhe.Plaintext.GetSchemeID"]], "getslots() (openfhe.plaintext method)": [[7, "openfhe.Plaintext.GetSlots"]], "getstringvalue() (openfhe.plaintext method)": [[7, "openfhe.Plaintext.GetStringValue"]], "highbound() (openfhe.plaintext method)": [[7, "openfhe.Plaintext.HighBound"]], "isencoded() (openfhe.plaintext method)": [[7, "openfhe.Plaintext.IsEncoded"]], "lowbound() (openfhe.plaintext method)": [[7, "openfhe.Plaintext.LowBound"]], "plaintext (class in openfhe)": [[7, "openfhe.Plaintext"]], "setformat() (openfhe.plaintext method)": [[7, "openfhe.Plaintext.SetFormat"]], "setintvectorvalue() (openfhe.plaintext method)": [[7, "openfhe.Plaintext.SetIntVectorValue"]], "setlength() (openfhe.plaintext method)": [[7, "openfhe.Plaintext.SetLength"]], "setlevel() (openfhe.plaintext method)": [[7, "openfhe.Plaintext.SetLevel"]], "setnoisescaledeg() (openfhe.plaintext method)": [[7, "openfhe.Plaintext.SetNoiseScaleDeg"]], "setscalingfactor() (openfhe.plaintext method)": [[7, "openfhe.Plaintext.SetScalingFactor"]], "setslots() (openfhe.plaintext method)": [[7, "openfhe.Plaintext.SetSlots"]], "setstringvalue() (openfhe.plaintext method)": [[7, "openfhe.Plaintext.SetStringValue"]]}})