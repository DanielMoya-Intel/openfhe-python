Search.setIndex({"alltitles": {"API Reference:": [[5, null]], "BINFHE_METHOD": [[1, "binfhe-method"]], "BinFHE Output": [[1, "binfhe-output"]], "BinFHE enums": [[1, null]], "BinFHEContext": [[0, null]], "Binary Gates": [[1, "binary-gates"]], "Ciphertext": [[2, null]], "CryptoContext": [[3, null]], "CryptoParams": [[4, null]], "CryptoParamsBGVRNS": [[4, "cryptoparamsbgvrns"]], "CryptoParamsCKKSRNS": [[4, "cryptoparamsckksrns"]], "CyrptoParamsBFVRNS": [[4, "cyrptoparamsbfvrns"]], "Decryption Noise Mode": [[7, "decryption-noise-mode"]], "Encryption Technique": [[7, "encryption-technique"]], "Execution Mode": [[7, "execution-mode"]], "Key Switching Techniques": [[7, "key-switching-techniques"]], "KeyPair": [[6, "keypair"]], "LWECiphertext": [[0, "lweciphertext"]], "LWEPrivateKey": [[0, "lweprivatekey"]], "Multiparty Mode": [[7, "multiparty-mode"]], "Multiplication Technique": [[7, "multiplication-technique"]], "OpenFHE - Python": [[5, "openfhe-python"]], "PKE Scheme Features": [[7, "pke-scheme-features"]], "PKE enums": [[7, null]], "Parameter Set": [[1, "parameter-set"]], "Plaintext": [[8, null]], "Private Key": [[6, "private-key"]], "Proxy Reencryption Mode": [[7, "proxy-reencryption-mode"]], "Public Key": [[6, null]], "Scaling Techniques": [[7, "scaling-techniques"]], "Scheme Types": [[7, "scheme-types"]], "Secret Key Dist": [[7, "secret-key-dist"]], "Security Level": [[7, "security-level"]], "Welcome to OpenFHE - Python\u2019s documentation!": [[5, null]]}, "docnames": ["binfhe", "binfhe_enums", "ciphertext", "cryptocontext", "cryptoparams", "index", "keys", "pke_enums", "plaintext"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["binfhe.rst", "binfhe_enums.rst", "ciphertext.rst", "cryptocontext.rst", "cryptoparams.rst", "index.rst", "keys.rst", "pke_enums.rst", "plaintext.rst"], "indexentries": {"advancedshe (openfhe.pkeschemefeature attribute)": [[7, "openfhe.PKESchemeFeature.ADVANCEDSHE", false]], "and (openfhe.bingate attribute)": [[1, "openfhe.BINGATE.AND", false]], "ap (openfhe.binfhe_method attribute)": [[1, "openfhe.BINFHE_METHOD.AP", false]], "behz (openfhe.multiplicationtechnique attribute)": [[7, "openfhe.MultiplicationTechnique.BEHZ", false]], "bfvrns_scheme (openfhe.scheme attribute)": [[7, "openfhe.SCHEME.BFVRNS_SCHEME", false]], "bgvrns_scheme (openfhe.scheme attribute)": [[7, "openfhe.SCHEME.BGVRNS_SCHEME", false]], "binfhe_method (class in openfhe)": [[1, "openfhe.BINFHE_METHOD", false]], "binfhe_output (class in openfhe)": [[1, "openfhe.BINFHE_OUTPUT", false]], "binfhe_paramset (class in openfhe)": [[1, "openfhe.BINFHE_PARAMSET", false]], "binfhecontext (class in openfhe)": [[0, "openfhe.BinFHEContext", false]], "bingate (class in openfhe)": [[1, "openfhe.BINGATE", false]], "bootstrap() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.Bootstrap", false]], "bootstrapped (openfhe.binfhe_output attribute)": [[1, "openfhe.BINFHE_OUTPUT.BOOTSTRAPPED", false]], "btkeygen() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.BTKeyGen", false]], "bv (openfhe.keyswitchtechnique attribute)": [[7, "openfhe.KeySwitchTechnique.BV", false]], "ccparamsbfvrns (class in openfhe)": [[4, "openfhe.CCParamsBFVRNS", false]], "ccparamsbgvrns (class in openfhe)": [[4, "openfhe.CCParamsBGVRNS", false]], "ccparamsckksrns (class in openfhe)": [[4, "openfhe.CCParamsCKKSRNS", false]], "ciphertext (class in openfhe)": [[2, "openfhe.Ciphertext", false]], "ckksrns_scheme (openfhe.scheme attribute)": [[7, "openfhe.SCHEME.CKKSRNS_SCHEME", false]], "clearbtkeys() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.ClearBTKeys", false]], "clone() (openfhe.ciphertext method)": [[2, "openfhe.Ciphertext.Clone", false]], "compositescalingauto (openfhe.scalingtechnique attribute)": [[7, "openfhe.ScalingTechnique.COMPOSITESCALINGAUTO", false]], "compositescalingmanual (openfhe.scalingtechnique attribute)": [[7, "openfhe.ScalingTechnique.COMPOSITESCALINGMANUAL", false]], "decode() (openfhe.plaintext method)": [[8, "openfhe.Plaintext.Decode", false]], "decrypt() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.Decrypt", false]], "decryptionnoisemode (class in openfhe)": [[7, "openfhe.DecryptionNoiseMode", false]], "encode() (openfhe.plaintext method)": [[8, "openfhe.Plaintext.Encode", false]], "encrypt() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.Encrypt", false]], "encryptiontechnique (class in openfhe)": [[7, "openfhe.EncryptionTechnique", false]], "evalbingate() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.EvalBinGate", false]], "evalconstant() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.EvalConstant", false]], "evaldecomp() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.EvalDecomp", false]], "evalfloor() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.EvalFloor", false]], "evalfunc() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.EvalFunc", false]], "evalnot() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.EvalNOT", false]], "evalsign() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.EvalSign", false]], "exec_evaluation (openfhe.executionmode attribute)": [[7, "openfhe.ExecutionMode.EXEC_EVALUATION", false]], "exec_noise_estimation (openfhe.executionmode attribute)": [[7, "openfhe.ExecutionMode.EXEC_NOISE_ESTIMATION", false]], "executionmode (class in openfhe)": [[7, "openfhe.ExecutionMode", false]], "extended (openfhe.encryptiontechnique attribute)": [[7, "openfhe.EncryptionTechnique.EXTENDED", false]], "fhe (openfhe.pkeschemefeature attribute)": [[7, "openfhe.PKESchemeFeature.FHE", false]], "fixed_noise_decrypt (openfhe.decryptionnoisemode attribute)": [[7, "openfhe.DecryptionNoiseMode.FIXED_NOISE_DECRYPT", false]], "fixed_noise_hra (openfhe.proxyreencryptionmode attribute)": [[7, "openfhe.ProxyReEncryptionMode.FIXED_NOISE_HRA", false]], "fixed_noise_multiparty (openfhe.multipartymode attribute)": [[7, "openfhe.MultipartyMode.FIXED_NOISE_MULTIPARTY", false]], "fixedauto (openfhe.scalingtechnique attribute)": [[7, "openfhe.ScalingTechnique.FIXEDAUTO", false]], "fixedmanual (openfhe.scalingtechnique attribute)": [[7, "openfhe.ScalingTechnique.FIXEDMANUAL", false]], "flexibleauto (openfhe.scalingtechnique attribute)": [[7, "openfhe.ScalingTechnique.FLEXIBLEAUTO", false]], "flexibleautoext (openfhe.scalingtechnique attribute)": [[7, "openfhe.ScalingTechnique.FLEXIBLEAUTOEXT", false]], "fresh (openfhe.binfhe_output attribute)": [[1, "openfhe.BINFHE_OUTPUT.FRESH", false]], "gaussian (openfhe.secretkeydist attribute)": [[7, "openfhe.SecretKeyDist.GAUSSIAN", false]], "generatebinfhecontext() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.GenerateBinFHEContext", false]], "generatelutviafunction() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.GenerateLUTviaFunction", false]], "getbatchsize() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetBatchSize", false]], "getbatchsize() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetBatchSize", false]], "getbatchsize() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetBatchSize", false]], "getbeta() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.GetBeta", false]], "getbinfhescheme() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.GetBinFHEScheme", false]], "getckksdatatype() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetCKKSDataType", false]], "getckksdatatype() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetCKKSDataType", false]], "getckksdatatype() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetCKKSDataType", false]], "getckkspackedvalue() (openfhe.plaintext method)": [[8, "openfhe.Plaintext.GetCKKSPackedValue", false]], "getcoefpackedvalue() (openfhe.plaintext method)": [[8, "openfhe.Plaintext.GetCoefPackedValue", false]], "getcompositedegree() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetCompositeDegree", false]], "getcompositedegree() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetCompositeDegree", false]], "getcompositedegree() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetCompositeDegree", false]], "getdecryptionnoisemode() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetDecryptionNoiseMode", false]], "getdecryptionnoisemode() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetDecryptionNoiseMode", false]], "getdecryptionnoisemode() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetDecryptionNoiseMode", false]], "getdesiredprecision() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetDesiredPrecision", false]], "getdesiredprecision() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetDesiredPrecision", false]], "getdesiredprecision() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetDesiredPrecision", false]], "getdigitsize() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetDigitSize", false]], "getdigitsize() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetDigitSize", false]], "getdigitsize() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetDigitSize", false]], "getencryptiontechnique() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetEncryptionTechnique", false]], "getencryptiontechnique() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetEncryptionTechnique", false]], "getencryptiontechnique() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetEncryptionTechnique", false]], "getevaladdcount() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetEvalAddCount", false]], "getevaladdcount() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetEvalAddCount", false]], "getevaladdcount() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetEvalAddCount", false]], "getexecutionmode() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetExecutionMode", false]], "getexecutionmode() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetExecutionMode", false]], "getexecutionmode() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetExecutionMode", false]], "getfirstmodsize() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetFirstModSize", false]], "getfirstmodsize() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetFirstModSize", false]], "getfirstmodsize() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetFirstModSize", false]], "getformattedvalues() (openfhe.plaintext method)": [[8, "openfhe.Plaintext.GetFormattedValues", false]], "getinteractivebootcompressionlevel() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetInteractiveBootCompressionLevel", false]], "getinteractivebootcompressionlevel() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetInteractiveBootCompressionLevel", false]], "getinteractivebootcompressionlevel() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetInteractiveBootCompressionLevel", false]], "getkeyswitchcount() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetKeySwitchCount", false]], "getkeyswitchcount() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetKeySwitchCount", false]], "getkeyswitchcount() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetKeySwitchCount", false]], "getkeyswitchtechnique() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetKeySwitchTechnique", false]], "getkeyswitchtechnique() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetKeySwitchTechnique", false]], "getkeyswitchtechnique() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetKeySwitchTechnique", false]], "getkeytag() (openfhe.privatekey method)": [[6, "openfhe.PrivateKey.GetKeyTag", false]], "getkeytag() (openfhe.publickey method)": [[6, "openfhe.PublicKey.GetKeyTag", false]], "getlength() (openfhe.lweciphertext method)": [[0, "openfhe.LWECiphertext.GetLength", false]], "getlength() (openfhe.lweprivatekey method)": [[0, "openfhe.LWEPrivateKey.GetLength", false]], "getlength() (openfhe.plaintext method)": [[8, "openfhe.Plaintext.GetLength", false]], "getlevel() (openfhe.ciphertext method)": [[2, "openfhe.Ciphertext.GetLevel", false]], "getlevel() (openfhe.plaintext method)": [[8, "openfhe.Plaintext.GetLevel", false]], "getlogerror() (openfhe.plaintext method)": [[8, "openfhe.Plaintext.GetLogError", false]], "getlogprecision() (openfhe.plaintext method)": [[8, "openfhe.Plaintext.GetLogPrecision", false]], "getlwescheme() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.GetLWEScheme", false]], "getmaxplaintextspace() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.GetMaxPlaintextSpace", false]], "getmaxrelinskdeg() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetMaxRelinSkDeg", false]], "getmaxrelinskdeg() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetMaxRelinSkDeg", false]], "getmaxrelinskdeg() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetMaxRelinSkDeg", false]], "getmodulus() (openfhe.lweciphertext method)": [[0, "openfhe.LWECiphertext.GetModulus", false]], "getmultipartymode() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetMultipartyMode", false]], "getmultipartymode() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetMultipartyMode", false]], "getmultipartymode() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetMultipartyMode", false]], "getmultiplicationtechnique() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetMultiplicationTechnique", false]], "getmultiplicationtechnique() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetMultiplicationTechnique", false]], "getmultiplicationtechnique() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetMultiplicationTechnique", false]], "getmultiplicativedepth() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetMultiplicativeDepth", false]], "getmultiplicativedepth() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetMultiplicativeDepth", false]], "getmultiplicativedepth() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetMultiplicativeDepth", false]], "getn() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.Getn", false]], "getnoiseestimate() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetNoiseEstimate", false]], "getnoiseestimate() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetNoiseEstimate", false]], "getnoiseestimate() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetNoiseEstimate", false]], "getnoisescaledeg() (openfhe.ciphertext method)": [[2, "openfhe.Ciphertext.GetNoiseScaleDeg", false]], "getnoisescaledeg() (openfhe.plaintext method)": [[8, "openfhe.Plaintext.GetNoiseScaleDeg", false]], "getnumadversarialqueries() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetNumAdversarialQueries", false]], "getnumadversarialqueries() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetNumAdversarialQueries", false]], "getnumadversarialqueries() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetNumAdversarialQueries", false]], "getnumlargedigits() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetNumLargeDigits", false]], "getnumlargedigits() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetNumLargeDigits", false]], "getnumlargedigits() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetNumLargeDigits", false]], "getpackedvalue() (openfhe.plaintext method)": [[8, "openfhe.Plaintext.GetPackedValue", false]], "getparams() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.GetParams", false]], "getplaintextmodulus() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetPlaintextModulus", false]], "getplaintextmodulus() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetPlaintextModulus", false]], "getplaintextmodulus() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetPlaintextModulus", false]], "getpremode() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetPREMode", false]], "getpremode() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetPREMode", false]], "getpremode() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetPREMode", false]], "getprenumhops() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetPRENumHops", false]], "getprenumhops() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetPRENumHops", false]], "getprenumhops() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetPRENumHops", false]], "getpublickey() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.GetPublicKey", false]], "getq() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.Getq", false]], "getrealpackedvalue() (openfhe.plaintext method)": [[8, "openfhe.Plaintext.GetRealPackedValue", false]], "getrefreshkey() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.GetRefreshKey", false]], "getregisterwordsize() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetRegisterWordSize", false]], "getregisterwordsize() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetRegisterWordSize", false]], "getregisterwordsize() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetRegisterWordSize", false]], "getringdim() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetRingDim", false]], "getringdim() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetRingDim", false]], "getringdim() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetRingDim", false]], "getscalingfactor() (openfhe.plaintext method)": [[8, "openfhe.Plaintext.GetScalingFactor", false]], "getscalingmodsize() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetScalingModSize", false]], "getscalingmodsize() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetScalingModSize", false]], "getscalingmodsize() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetScalingModSize", false]], "getscalingtechnique() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetScalingTechnique", false]], "getscalingtechnique() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetScalingTechnique", false]], "getscalingtechnique() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetScalingTechnique", false]], "getscheme() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetScheme", false]], "getscheme() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetScheme", false]], "getscheme() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetScheme", false]], "getschemeid() (openfhe.plaintext method)": [[8, "openfhe.Plaintext.GetSchemeID", false]], "getsecretkeydist() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetSecretKeyDist", false]], "getsecretkeydist() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetSecretKeyDist", false]], "getsecretkeydist() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetSecretKeyDist", false]], "getsecuritylevel() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetSecurityLevel", false]], "getsecuritylevel() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetSecurityLevel", false]], "getsecuritylevel() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetSecurityLevel", false]], "getslots() (openfhe.ciphertext method)": [[2, "openfhe.Ciphertext.GetSlots", false]], "getslots() (openfhe.plaintext method)": [[8, "openfhe.Plaintext.GetSlots", false]], "getstandarddeviation() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetStandardDeviation", false]], "getstandarddeviation() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetStandardDeviation", false]], "getstandarddeviation() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetStandardDeviation", false]], "getstatisticalsecurity() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.GetStatisticalSecurity", false]], "getstatisticalsecurity() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.GetStatisticalSecurity", false]], "getstatisticalsecurity() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.GetStatisticalSecurity", false]], "getstringvalue() (openfhe.plaintext method)": [[8, "openfhe.Plaintext.GetStringValue", false]], "getswitchkey() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.GetSwitchKey", false]], "ginx (openfhe.binfhe_method attribute)": [[1, "openfhe.BINFHE_METHOD.GINX", false]], "good() (openfhe.keypair method)": [[6, "openfhe.KeyPair.good", false]], "hestd_128_classic (openfhe.securitylevel attribute)": [[7, "openfhe.SecurityLevel.HEStd_128_classic", false]], "hestd_192_classic (openfhe.securitylevel attribute)": [[7, "openfhe.SecurityLevel.HEStd_192_classic", false]], "hestd_256_classic (openfhe.securitylevel attribute)": [[7, "openfhe.SecurityLevel.HEStd_256_classic", false]], "hestd_notset (openfhe.securitylevel attribute)": [[7, "openfhe.SecurityLevel.HEStd_NotSet", false]], "highbound() (openfhe.plaintext method)": [[8, "openfhe.Plaintext.HighBound", false]], "hps (openfhe.multiplicationtechnique attribute)": [[7, "openfhe.MultiplicationTechnique.HPS", false]], "hpspoverq (openfhe.multiplicationtechnique attribute)": [[7, "openfhe.MultiplicationTechnique.HPSPOVERQ", false]], "hpspoverqleveled (openfhe.multiplicationtechnique attribute)": [[7, "openfhe.MultiplicationTechnique.HPSPOVERQLEVELED", false]], "hybrid (openfhe.keyswitchtechnique attribute)": [[7, "openfhe.KeySwitchTechnique.HYBRID", false]], "indcpa (openfhe.proxyreencryptionmode attribute)": [[7, "openfhe.ProxyReEncryptionMode.INDCPA", false]], "invalid_ks_tech (openfhe.keyswitchtechnique attribute)": [[7, "openfhe.KeySwitchTechnique.INVALID_KS_TECH", false]], "invalid_method (openfhe.binfhe_method attribute)": [[1, "openfhe.BINFHE_METHOD.INVALID_METHOD", false]], "invalid_multiparty_mode (openfhe.multipartymode attribute)": [[7, "openfhe.MultipartyMode.INVALID_MULTIPARTY_MODE", false]], "invalid_output (openfhe.binfhe_output attribute)": [[1, "openfhe.BINFHE_OUTPUT.INVALID_OUTPUT", false]], "invalid_rs_technique (openfhe.scalingtechnique attribute)": [[7, "openfhe.ScalingTechnique.INVALID_RS_TECHNIQUE", false]], "invalid_scheme (openfhe.scheme attribute)": [[7, "openfhe.SCHEME.INVALID_SCHEME", false]], "isencoded() (openfhe.plaintext method)": [[8, "openfhe.Plaintext.IsEncoded", false]], "keygen() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.KeyGen", false]], "keygenn() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.KeyGenN", false]], "keygenpair() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.KeyGenPair", false]], "keypair (class in openfhe)": [[6, "openfhe.KeyPair", false]], "keyswitch (openfhe.pkeschemefeature attribute)": [[7, "openfhe.PKESchemeFeature.KEYSWITCH", false]], "keyswitchtechnique (class in openfhe)": [[7, "openfhe.KeySwitchTechnique", false]], "leveledshe (openfhe.pkeschemefeature attribute)": [[7, "openfhe.PKESchemeFeature.LEVELEDSHE", false]], "lmkcdey (openfhe.binfhe_method attribute)": [[1, "openfhe.BINFHE_METHOD.LMKCDEY", false]], "loadbinary() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.LoadBinary", false]], "loadjson() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.LoadJSON", false]], "loadportablebinary() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.LoadPortableBinary", false]], "lowbound() (openfhe.plaintext method)": [[8, "openfhe.Plaintext.LowBound", false]], "lweciphertext (class in openfhe)": [[0, "openfhe.LWECiphertext", false]], "lweprivatekey (class in openfhe)": [[0, "openfhe.LWEPrivateKey", false]], "medium (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.MEDIUM", false]], "multiparty (openfhe.pkeschemefeature attribute)": [[7, "openfhe.PKESchemeFeature.MULTIPARTY", false]], "multipartymode (class in openfhe)": [[7, "openfhe.MultipartyMode", false]], "multiplicationtechnique (class in openfhe)": [[7, "openfhe.MultiplicationTechnique", false]], "name (openfhe.binfhe_method property)": [[1, "openfhe.BINFHE_METHOD.name", false]], "name (openfhe.binfhe_output property)": [[1, "openfhe.BINFHE_OUTPUT.name", false]], "name (openfhe.binfhe_paramset property)": [[1, "openfhe.BINFHE_PARAMSET.name", false]], "name (openfhe.bingate property)": [[1, "openfhe.BINGATE.name", false]], "name (openfhe.decryptionnoisemode property)": [[7, "openfhe.DecryptionNoiseMode.name", false]], "name (openfhe.encryptiontechnique property)": [[7, "openfhe.EncryptionTechnique.name", false]], "name (openfhe.executionmode property)": [[7, "openfhe.ExecutionMode.name", false]], "name (openfhe.keyswitchtechnique property)": [[7, "openfhe.KeySwitchTechnique.name", false]], "name (openfhe.multipartymode property)": [[7, "openfhe.MultipartyMode.name", false]], "name (openfhe.multiplicationtechnique property)": [[7, "openfhe.MultiplicationTechnique.name", false]], "name (openfhe.pkeschemefeature property)": [[7, "openfhe.PKESchemeFeature.name", false]], "name (openfhe.proxyreencryptionmode property)": [[7, "openfhe.ProxyReEncryptionMode.name", false]], "name (openfhe.scalingtechnique property)": [[7, "openfhe.ScalingTechnique.name", false]], "name (openfhe.scheme property)": [[7, "openfhe.SCHEME.name", false]], "name (openfhe.secretkeydist property)": [[7, "openfhe.SecretKeyDist.name", false]], "name (openfhe.securitylevel property)": [[7, "openfhe.SecurityLevel.name", false]], "nand (openfhe.bingate attribute)": [[1, "openfhe.BINGATE.NAND", false]], "noise_flooding_decrypt (openfhe.decryptionnoisemode attribute)": [[7, "openfhe.DecryptionNoiseMode.NOISE_FLOODING_DECRYPT", false]], "noise_flooding_hra (openfhe.proxyreencryptionmode attribute)": [[7, "openfhe.ProxyReEncryptionMode.NOISE_FLOODING_HRA", false]], "noise_flooding_multiparty (openfhe.multipartymode attribute)": [[7, "openfhe.MultipartyMode.NOISE_FLOODING_MULTIPARTY", false]], "nor (openfhe.bingate attribute)": [[1, "openfhe.BINGATE.NOR", false]], "norescale (openfhe.scalingtechnique attribute)": [[7, "openfhe.ScalingTechnique.NORESCALE", false]], "not_set (openfhe.proxyreencryptionmode attribute)": [[7, "openfhe.ProxyReEncryptionMode.NOT_SET", false]], "or (openfhe.bingate attribute)": [[1, "openfhe.BINGATE.OR", false]], "pke (openfhe.pkeschemefeature attribute)": [[7, "openfhe.PKESchemeFeature.PKE", false]], "pkeschemefeature (class in openfhe)": [[7, "openfhe.PKESchemeFeature", false]], "plaintext (class in openfhe)": [[8, "openfhe.Plaintext", false]], "pre (openfhe.pkeschemefeature attribute)": [[7, "openfhe.PKESchemeFeature.PRE", false]], "privatekey (class in openfhe)": [[6, "openfhe.PrivateKey", false]], "proxyreencryptionmode (class in openfhe)": [[7, "openfhe.ProxyReEncryptionMode", false]], "publickey (class in openfhe)": [[6, "openfhe.PublicKey", false]], "publickey (openfhe.keypair property)": [[6, "openfhe.KeyPair.publicKey", false]], "removeelement() (openfhe.ciphertext method)": [[2, "openfhe.Ciphertext.RemoveElement", false]], "savebinary() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.SaveBinary", false]], "savejson() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.SaveJSON", false]], "saveportablebinary() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.SavePortableBinary", false]], "scalingtechnique (class in openfhe)": [[7, "openfhe.ScalingTechnique", false]], "scheme (class in openfhe)": [[7, "openfhe.SCHEME", false]], "schemeswitch (openfhe.pkeschemefeature attribute)": [[7, "openfhe.PKESchemeFeature.SCHEMESWITCH", false]], "secretkey (openfhe.keypair property)": [[6, "openfhe.KeyPair.secretKey", false]], "secretkeydist (class in openfhe)": [[7, "openfhe.SecretKeyDist", false]], "securitylevel (class in openfhe)": [[7, "openfhe.SecurityLevel", false]], "serializedobjectname() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.SerializedObjectName", false]], "serializedversion() (openfhe.binfhecontext method)": [[0, "openfhe.BinFHEContext.SerializedVersion", false]], "setbatchsize() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetBatchSize", false]], "setbatchsize() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetBatchSize", false]], "setbatchsize() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetBatchSize", false]], "setckksdatatype() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetCKKSDataType", false]], "setckksdatatype() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetCKKSDataType", false]], "setckksdatatype() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetCKKSDataType", false]], "setcompositedegree() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetCompositeDegree", false]], "setcompositedegree() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetCompositeDegree", false]], "setcompositedegree() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetCompositeDegree", false]], "setdecryptionnoisemode() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetDecryptionNoiseMode", false]], "setdecryptionnoisemode() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetDecryptionNoiseMode", false]], "setdecryptionnoisemode() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetDecryptionNoiseMode", false]], "setdesiredprecision() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetDesiredPrecision", false]], "setdesiredprecision() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetDesiredPrecision", false]], "setdesiredprecision() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetDesiredPrecision", false]], "setdigitsize() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetDigitSize", false]], "setdigitsize() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetDigitSize", false]], "setdigitsize() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetDigitSize", false]], "setencryptiontechnique() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetEncryptionTechnique", false]], "setencryptiontechnique() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetEncryptionTechnique", false]], "setencryptiontechnique() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetEncryptionTechnique", false]], "setevaladdcount() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetEvalAddCount", false]], "setevaladdcount() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetEvalAddCount", false]], "setevaladdcount() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetEvalAddCount", false]], "setexecutionmode() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetExecutionMode", false]], "setexecutionmode() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetExecutionMode", false]], "setexecutionmode() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetExecutionMode", false]], "setfirstmodsize() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetFirstModSize", false]], "setfirstmodsize() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetFirstModSize", false]], "setfirstmodsize() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetFirstModSize", false]], "setformat() (openfhe.plaintext method)": [[8, "openfhe.Plaintext.SetFormat", false]], "setinteractivebootcompressionlevel() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetInteractiveBootCompressionLevel", false]], "setinteractivebootcompressionlevel() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetInteractiveBootCompressionLevel", false]], "setinteractivebootcompressionlevel() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetInteractiveBootCompressionLevel", false]], "setintvectorvalue() (openfhe.plaintext method)": [[8, "openfhe.Plaintext.SetIntVectorValue", false]], "setkeyswitchcount() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetKeySwitchCount", false]], "setkeyswitchcount() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetKeySwitchCount", false]], "setkeyswitchcount() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetKeySwitchCount", false]], "setkeyswitchtechnique() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetKeySwitchTechnique", false]], "setkeyswitchtechnique() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetKeySwitchTechnique", false]], "setkeyswitchtechnique() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetKeySwitchTechnique", false]], "setkeytag() (openfhe.privatekey method)": [[6, "openfhe.PrivateKey.SetKeyTag", false]], "setkeytag() (openfhe.publickey method)": [[6, "openfhe.PublicKey.SetKeyTag", false]], "setlength() (openfhe.plaintext method)": [[8, "openfhe.Plaintext.SetLength", false]], "setlevel() (openfhe.ciphertext method)": [[2, "openfhe.Ciphertext.SetLevel", false]], "setlevel() (openfhe.plaintext method)": [[8, "openfhe.Plaintext.SetLevel", false]], "setmaxrelinskdeg() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetMaxRelinSkDeg", false]], "setmaxrelinskdeg() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetMaxRelinSkDeg", false]], "setmaxrelinskdeg() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetMaxRelinSkDeg", false]], "setmultipartymode() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetMultipartyMode", false]], "setmultipartymode() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetMultipartyMode", false]], "setmultipartymode() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetMultipartyMode", false]], "setmultiplicationtechnique() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetMultiplicationTechnique", false]], "setmultiplicationtechnique() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetMultiplicationTechnique", false]], "setmultiplicationtechnique() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetMultiplicationTechnique", false]], "setmultiplicativedepth() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetMultiplicativeDepth", false]], "setmultiplicativedepth() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetMultiplicativeDepth", false]], "setmultiplicativedepth() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetMultiplicativeDepth", false]], "setnoiseestimate() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetNoiseEstimate", false]], "setnoiseestimate() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetNoiseEstimate", false]], "setnoiseestimate() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetNoiseEstimate", false]], "setnoisescaledeg() (openfhe.ciphertext method)": [[2, "openfhe.Ciphertext.SetNoiseScaleDeg", false]], "setnoisescaledeg() (openfhe.plaintext method)": [[8, "openfhe.Plaintext.SetNoiseScaleDeg", false]], "setnumadversarialqueries() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetNumAdversarialQueries", false]], "setnumadversarialqueries() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetNumAdversarialQueries", false]], "setnumadversarialqueries() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetNumAdversarialQueries", false]], "setnumlargedigits() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetNumLargeDigits", false]], "setnumlargedigits() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetNumLargeDigits", false]], "setnumlargedigits() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetNumLargeDigits", false]], "setplaintextmodulus() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetPlaintextModulus", false]], "setplaintextmodulus() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetPlaintextModulus", false]], "setplaintextmodulus() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetPlaintextModulus", false]], "setpremode() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetPREMode", false]], "setpremode() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetPREMode", false]], "setpremode() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetPREMode", false]], "setprenumhops() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetPRENumHops", false]], "setprenumhops() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetPRENumHops", false]], "setprenumhops() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetPRENumHops", false]], "setregisterwordsize() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetRegisterWordSize", false]], "setregisterwordsize() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetRegisterWordSize", false]], "setregisterwordsize() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetRegisterWordSize", false]], "setringdim() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetRingDim", false]], "setringdim() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetRingDim", false]], "setringdim() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetRingDim", false]], "setscalingfactor() (openfhe.plaintext method)": [[8, "openfhe.Plaintext.SetScalingFactor", false]], "setscalingmodsize() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetScalingModSize", false]], "setscalingmodsize() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetScalingModSize", false]], "setscalingmodsize() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetScalingModSize", false]], "setscalingtechnique() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetScalingTechnique", false]], "setscalingtechnique() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetScalingTechnique", false]], "setscalingtechnique() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetScalingTechnique", false]], "setsecretkeydist() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetSecretKeyDist", false]], "setsecretkeydist() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetSecretKeyDist", false]], "setsecretkeydist() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetSecretKeyDist", false]], "setsecuritylevel() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetSecurityLevel", false]], "setsecuritylevel() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetSecurityLevel", false]], "setsecuritylevel() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetSecurityLevel", false]], "setslots() (openfhe.ciphertext method)": [[2, "openfhe.Ciphertext.SetSlots", false]], "setslots() (openfhe.plaintext method)": [[8, "openfhe.Plaintext.SetSlots", false]], "setstandarddeviation() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetStandardDeviation", false]], "setstandarddeviation() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetStandardDeviation", false]], "setstandarddeviation() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetStandardDeviation", false]], "setstatisticalsecurity() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetStatisticalSecurity", false]], "setstatisticalsecurity() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetStatisticalSecurity", false]], "setstatisticalsecurity() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetStatisticalSecurity", false]], "setstringvalue() (openfhe.plaintext method)": [[8, "openfhe.Plaintext.SetStringValue", false]], "setthresholdnumofparties() (openfhe.ccparamsbfvrns method)": [[4, "openfhe.CCParamsBFVRNS.SetThresholdNumOfParties", false]], "setthresholdnumofparties() (openfhe.ccparamsbgvrns method)": [[4, "openfhe.CCParamsBGVRNS.SetThresholdNumOfParties", false]], "setthresholdnumofparties() (openfhe.ccparamsckksrns method)": [[4, "openfhe.CCParamsCKKSRNS.SetThresholdNumOfParties", false]], "signed_mod_test (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.SIGNED_MOD_TEST", false]], "sparse_ternary (openfhe.secretkeydist attribute)": [[7, "openfhe.SecretKeyDist.SPARSE_TERNARY", false]], "standard (openfhe.encryptiontechnique attribute)": [[7, "openfhe.EncryptionTechnique.STANDARD", false]], "std128 (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD128", false]], "std128_3 (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD128_3", false]], "std128_3_lmkcdey (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD128_3_LMKCDEY", false]], "std128_4 (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD128_4", false]], "std128_4_lmkcdey (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD128_4_LMKCDEY", false]], "std128_ap (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD128_AP", false]], "std128_lmkcdey (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD128_LMKCDEY", false]], "std128q (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD128Q", false]], "std128q_3 (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD128Q_3", false]], "std128q_3_lmkcdey (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD128Q_3_LMKCDEY", false]], "std128q_4 (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD128Q_4", false]], "std128q_4_lmkcdey (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD128Q_4_LMKCDEY", false]], "std128q_lmkcdey (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD128Q_LMKCDEY", false]], "std192 (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD192", false]], "std192q (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD192Q", false]], "std192q_3 (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD192Q_3", false]], "std192q_4 (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD192Q_4", false]], "std256 (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD256", false]], "std256q (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD256Q", false]], "std256q_3 (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD256Q_3", false]], "std256q_4 (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.STD256Q_4", false]], "toy (openfhe.binfhe_paramset attribute)": [[1, "openfhe.BINFHE_PARAMSET.TOY", false]], "uniform_ternary (openfhe.secretkeydist attribute)": [[7, "openfhe.SecretKeyDist.UNIFORM_TERNARY", false]], "value (openfhe.binfhe_method property)": [[1, "openfhe.BINFHE_METHOD.value", false]], "value (openfhe.binfhe_output property)": [[1, "openfhe.BINFHE_OUTPUT.value", false]], "value (openfhe.binfhe_paramset property)": [[1, "openfhe.BINFHE_PARAMSET.value", false]], "value (openfhe.bingate property)": [[1, "openfhe.BINGATE.value", false]], "value (openfhe.decryptionnoisemode property)": [[7, "openfhe.DecryptionNoiseMode.value", false]], "value (openfhe.encryptiontechnique property)": [[7, "openfhe.EncryptionTechnique.value", false]], "value (openfhe.executionmode property)": [[7, "openfhe.ExecutionMode.value", false]], "value (openfhe.keyswitchtechnique property)": [[7, "openfhe.KeySwitchTechnique.value", false]], "value (openfhe.multipartymode property)": [[7, "openfhe.MultipartyMode.value", false]], "value (openfhe.multiplicationtechnique property)": [[7, "openfhe.MultiplicationTechnique.value", false]], "value (openfhe.pkeschemefeature property)": [[7, "openfhe.PKESchemeFeature.value", false]], "value (openfhe.proxyreencryptionmode property)": [[7, "openfhe.ProxyReEncryptionMode.value", false]], "value (openfhe.scalingtechnique property)": [[7, "openfhe.ScalingTechnique.value", false]], "value (openfhe.scheme property)": [[7, "openfhe.SCHEME.value", false]], "value (openfhe.secretkeydist property)": [[7, "openfhe.SecretKeyDist.value", false]], "value (openfhe.securitylevel property)": [[7, "openfhe.SecurityLevel.value", false]], "xnor (openfhe.bingate attribute)": [[1, "openfhe.BINGATE.XNOR", false]], "xnor_fast (openfhe.bingate attribute)": [[1, "openfhe.BINGATE.XNOR_FAST", false]], "xor (openfhe.bingate attribute)": [[1, "openfhe.BINGATE.XOR", false]], "xor_fast (openfhe.bingate attribute)": [[1, "openfhe.BINGATE.XOR_FAST", false]]}, "objects": {"openfhe": [[1, 0, 1, "", "BINFHE_METHOD"], [1, 0, 1, "", "BINFHE_OUTPUT"], [1, 0, 1, "", "BINFHE_PARAMSET"], [1, 0, 1, "", "BINGATE"], [0, 0, 1, "", "BinFHEContext"], [4, 0, 1, "", "CCParamsBFVRNS"], [4, 0, 1, "", "CCParamsBGVRNS"], [4, 0, 1, "", "CCParamsCKKSRNS"], [2, 0, 1, "", "Ciphertext"], [7, 0, 1, "", "DecryptionNoiseMode"], [7, 0, 1, "", "EncryptionTechnique"], [7, 0, 1, "", "ExecutionMode"], [6, 0, 1, "", "KeyPair"], [7, 0, 1, "", "KeySwitchTechnique"], [0, 0, 1, "", "LWECiphertext"], [0, 0, 1, "", "LWEPrivateKey"], [7, 0, 1, "", "MultipartyMode"], [7, 0, 1, "", "MultiplicationTechnique"], [7, 0, 1, "", "PKESchemeFeature"], [8, 0, 1, "", "Plaintext"], [6, 0, 1, "", "PrivateKey"], [7, 0, 1, "", "ProxyReEncryptionMode"], [6, 0, 1, "", "PublicKey"], [7, 0, 1, "", "SCHEME"], [7, 0, 1, "", "ScalingTechnique"], [7, 0, 1, "", "SecretKeyDist"], [7, 0, 1, "", "SecurityLevel"]], "openfhe.BINFHE_METHOD": [[1, 1, 1, "", "AP"], [1, 1, 1, "", "GINX"], [1, 1, 1, "", "INVALID_METHOD"], [1, 1, 1, "", "LMKCDEY"], [1, 2, 1, "", "name"], [1, 2, 1, "", "value"]], "openfhe.BINFHE_OUTPUT": [[1, 1, 1, "", "BOOTSTRAPPED"], [1, 1, 1, "", "FRESH"], [1, 1, 1, "", "INVALID_OUTPUT"], [1, 2, 1, "", "name"], [1, 2, 1, "", "value"]], "openfhe.BINFHE_PARAMSET": [[1, 1, 1, "", "MEDIUM"], [1, 1, 1, "", "SIGNED_MOD_TEST"], [1, 1, 1, "", "STD128"], [1, 1, 1, "", "STD128Q"], [1, 1, 1, "", "STD128Q_3"], [1, 1, 1, "", "STD128Q_3_LMKCDEY"], [1, 1, 1, "", "STD128Q_4"], [1, 1, 1, "", "STD128Q_4_LMKCDEY"], [1, 1, 1, "", "STD128Q_LMKCDEY"], [1, 1, 1, "", "STD128_3"], [1, 1, 1, "", "STD128_3_LMKCDEY"], [1, 1, 1, "", "STD128_4"], [1, 1, 1, "", "STD128_4_LMKCDEY"], [1, 1, 1, "", "STD128_AP"], [1, 1, 1, "", "STD128_LMKCDEY"], [1, 1, 1, "", "STD192"], [1, 1, 1, "", "STD192Q"], [1, 1, 1, "", "STD192Q_3"], [1, 1, 1, "", "STD192Q_4"], [1, 1, 1, "", "STD256"], [1, 1, 1, "", "STD256Q"], [1, 1, 1, "", "STD256Q_3"], [1, 1, 1, "", "STD256Q_4"], [1, 1, 1, "", "TOY"], [1, 2, 1, "", "name"], [1, 2, 1, "", "value"]], "openfhe.BINGATE": [[1, 1, 1, "", "AND"], [1, 1, 1, "", "NAND"], [1, 1, 1, "", "NOR"], [1, 1, 1, "", "OR"], [1, 1, 1, "", "XNOR"], [1, 1, 1, "", "XNOR_FAST"], [1, 1, 1, "", "XOR"], [1, 1, 1, "", "XOR_FAST"], [1, 2, 1, "", "name"], [1, 2, 1, "", "value"]], "openfhe.BinFHEContext": [[0, 3, 1, "", "BTKeyGen"], [0, 3, 1, "", "Bootstrap"], [0, 3, 1, "", "ClearBTKeys"], [0, 3, 1, "", "Decrypt"], [0, 3, 1, "", "Encrypt"], [0, 3, 1, "", "EvalBinGate"], [0, 3, 1, "", "EvalConstant"], [0, 3, 1, "", "EvalDecomp"], [0, 3, 1, "", "EvalFloor"], [0, 3, 1, "", "EvalFunc"], [0, 3, 1, "", "EvalNOT"], [0, 3, 1, "", "EvalSign"], [0, 3, 1, "", "GenerateBinFHEContext"], [0, 3, 1, "", "GenerateLUTviaFunction"], [0, 3, 1, "", "GetBeta"], [0, 3, 1, "", "GetBinFHEScheme"], [0, 3, 1, "", "GetLWEScheme"], [0, 3, 1, "", "GetMaxPlaintextSpace"], [0, 3, 1, "", "GetParams"], [0, 3, 1, "", "GetPublicKey"], [0, 3, 1, "", "GetRefreshKey"], [0, 3, 1, "", "GetSwitchKey"], [0, 3, 1, "", "Getn"], [0, 3, 1, "", "Getq"], [0, 3, 1, "", "KeyGen"], [0, 3, 1, "", "KeyGenN"], [0, 3, 1, "", "KeyGenPair"], [0, 3, 1, "", "LoadBinary"], [0, 3, 1, "", "LoadJSON"], [0, 3, 1, "", "LoadPortableBinary"], [0, 3, 1, "", "SaveBinary"], [0, 3, 1, "", "SaveJSON"], [0, 3, 1, "", "SavePortableBinary"], [0, 3, 1, "", "SerializedObjectName"], [0, 3, 1, "", "SerializedVersion"]], "openfhe.CCParamsBFVRNS": [[4, 3, 1, "", "GetBatchSize"], [4, 3, 1, "", "GetCKKSDataType"], [4, 3, 1, "", "GetCompositeDegree"], [4, 3, 1, "", "GetDecryptionNoiseMode"], [4, 3, 1, "", "GetDesiredPrecision"], [4, 3, 1, "", "GetDigitSize"], [4, 3, 1, "", "GetEncryptionTechnique"], [4, 3, 1, "", "GetEvalAddCount"], [4, 3, 1, "", "GetExecutionMode"], [4, 3, 1, "", "GetFirstModSize"], [4, 3, 1, "", "GetInteractiveBootCompressionLevel"], [4, 3, 1, "", "GetKeySwitchCount"], [4, 3, 1, "", "GetKeySwitchTechnique"], [4, 3, 1, "", "GetMaxRelinSkDeg"], [4, 3, 1, "", "GetMultipartyMode"], [4, 3, 1, "", "GetMultiplicationTechnique"], [4, 3, 1, "", "GetMultiplicativeDepth"], [4, 3, 1, "", "GetNoiseEstimate"], [4, 3, 1, "", "GetNumAdversarialQueries"], [4, 3, 1, "", "GetNumLargeDigits"], [4, 3, 1, "", "GetPREMode"], [4, 3, 1, "", "GetPRENumHops"], [4, 3, 1, "", "GetPlaintextModulus"], [4, 3, 1, "", "GetRegisterWordSize"], [4, 3, 1, "", "GetRingDim"], [4, 3, 1, "", "GetScalingModSize"], [4, 3, 1, "", "GetScalingTechnique"], [4, 3, 1, "", "GetScheme"], [4, 3, 1, "", "GetSecretKeyDist"], [4, 3, 1, "", "GetSecurityLevel"], [4, 3, 1, "", "GetStandardDeviation"], [4, 3, 1, "", "GetStatisticalSecurity"], [4, 3, 1, "", "SetBatchSize"], [4, 3, 1, "", "SetCKKSDataType"], [4, 3, 1, "", "SetCompositeDegree"], [4, 3, 1, "", "SetDecryptionNoiseMode"], [4, 3, 1, "", "SetDesiredPrecision"], [4, 3, 1, "", "SetDigitSize"], [4, 3, 1, "", "SetEncryptionTechnique"], [4, 3, 1, "", "SetEvalAddCount"], [4, 3, 1, "", "SetExecutionMode"], [4, 3, 1, "", "SetFirstModSize"], [4, 3, 1, "", "SetInteractiveBootCompressionLevel"], [4, 3, 1, "", "SetKeySwitchCount"], [4, 3, 1, "", "SetKeySwitchTechnique"], [4, 3, 1, "", "SetMaxRelinSkDeg"], [4, 3, 1, "", "SetMultipartyMode"], [4, 3, 1, "", "SetMultiplicationTechnique"], [4, 3, 1, "", "SetMultiplicativeDepth"], [4, 3, 1, "", "SetNoiseEstimate"], [4, 3, 1, "", "SetNumAdversarialQueries"], [4, 3, 1, "", "SetNumLargeDigits"], [4, 3, 1, "", "SetPREMode"], [4, 3, 1, "", "SetPRENumHops"], [4, 3, 1, "", "SetPlaintextModulus"], [4, 3, 1, "", "SetRegisterWordSize"], [4, 3, 1, "", "SetRingDim"], [4, 3, 1, "", "SetScalingModSize"], [4, 3, 1, "", "SetScalingTechnique"], [4, 3, 1, "", "SetSecretKeyDist"], [4, 3, 1, "", "SetSecurityLevel"], [4, 3, 1, "", "SetStandardDeviation"], [4, 3, 1, "", "SetStatisticalSecurity"], [4, 3, 1, "", "SetThresholdNumOfParties"]], "openfhe.CCParamsBGVRNS": [[4, 3, 1, "", "GetBatchSize"], [4, 3, 1, "", "GetCKKSDataType"], [4, 3, 1, "", "GetCompositeDegree"], [4, 3, 1, "", "GetDecryptionNoiseMode"], [4, 3, 1, "", "GetDesiredPrecision"], [4, 3, 1, "", "GetDigitSize"], [4, 3, 1, "", "GetEncryptionTechnique"], [4, 3, 1, "", "GetEvalAddCount"], [4, 3, 1, "", "GetExecutionMode"], [4, 3, 1, "", "GetFirstModSize"], [4, 3, 1, "", "GetInteractiveBootCompressionLevel"], [4, 3, 1, "", "GetKeySwitchCount"], [4, 3, 1, "", "GetKeySwitchTechnique"], [4, 3, 1, "", "GetMaxRelinSkDeg"], [4, 3, 1, "", "GetMultipartyMode"], [4, 3, 1, "", "GetMultiplicationTechnique"], [4, 3, 1, "", "GetMultiplicativeDepth"], [4, 3, 1, "", "GetNoiseEstimate"], [4, 3, 1, "", "GetNumAdversarialQueries"], [4, 3, 1, "", "GetNumLargeDigits"], [4, 3, 1, "", "GetPREMode"], [4, 3, 1, "", "GetPRENumHops"], [4, 3, 1, "", "GetPlaintextModulus"], [4, 3, 1, "", "GetRegisterWordSize"], [4, 3, 1, "", "GetRingDim"], [4, 3, 1, "", "GetScalingModSize"], [4, 3, 1, "", "GetScalingTechnique"], [4, 3, 1, "", "GetScheme"], [4, 3, 1, "", "GetSecretKeyDist"], [4, 3, 1, "", "GetSecurityLevel"], [4, 3, 1, "", "GetStandardDeviation"], [4, 3, 1, "", "GetStatisticalSecurity"], [4, 3, 1, "", "SetBatchSize"], [4, 3, 1, "", "SetCKKSDataType"], [4, 3, 1, "", "SetCompositeDegree"], [4, 3, 1, "", "SetDecryptionNoiseMode"], [4, 3, 1, "", "SetDesiredPrecision"], [4, 3, 1, "", "SetDigitSize"], [4, 3, 1, "", "SetEncryptionTechnique"], [4, 3, 1, "", "SetEvalAddCount"], [4, 3, 1, "", "SetExecutionMode"], [4, 3, 1, "", "SetFirstModSize"], [4, 3, 1, "", "SetInteractiveBootCompressionLevel"], [4, 3, 1, "", "SetKeySwitchCount"], [4, 3, 1, "", "SetKeySwitchTechnique"], [4, 3, 1, "", "SetMaxRelinSkDeg"], [4, 3, 1, "", "SetMultipartyMode"], [4, 3, 1, "", "SetMultiplicationTechnique"], [4, 3, 1, "", "SetMultiplicativeDepth"], [4, 3, 1, "", "SetNoiseEstimate"], [4, 3, 1, "", "SetNumAdversarialQueries"], [4, 3, 1, "", "SetNumLargeDigits"], [4, 3, 1, "", "SetPREMode"], [4, 3, 1, "", "SetPRENumHops"], [4, 3, 1, "", "SetPlaintextModulus"], [4, 3, 1, "", "SetRegisterWordSize"], [4, 3, 1, "", "SetRingDim"], [4, 3, 1, "", "SetScalingModSize"], [4, 3, 1, "", "SetScalingTechnique"], [4, 3, 1, "", "SetSecretKeyDist"], [4, 3, 1, "", "SetSecurityLevel"], [4, 3, 1, "", "SetStandardDeviation"], [4, 3, 1, "", "SetStatisticalSecurity"], [4, 3, 1, "", "SetThresholdNumOfParties"]], "openfhe.CCParamsCKKSRNS": [[4, 3, 1, "", "GetBatchSize"], [4, 3, 1, "", "GetCKKSDataType"], [4, 3, 1, "", "GetCompositeDegree"], [4, 3, 1, "", "GetDecryptionNoiseMode"], [4, 3, 1, "", "GetDesiredPrecision"], [4, 3, 1, "", "GetDigitSize"], [4, 3, 1, "", "GetEncryptionTechnique"], [4, 3, 1, "", "GetEvalAddCount"], [4, 3, 1, "", "GetExecutionMode"], [4, 3, 1, "", "GetFirstModSize"], [4, 3, 1, "", "GetInteractiveBootCompressionLevel"], [4, 3, 1, "", "GetKeySwitchCount"], [4, 3, 1, "", "GetKeySwitchTechnique"], [4, 3, 1, "", "GetMaxRelinSkDeg"], [4, 3, 1, "", "GetMultipartyMode"], [4, 3, 1, "", "GetMultiplicationTechnique"], [4, 3, 1, "", "GetMultiplicativeDepth"], [4, 3, 1, "", "GetNoiseEstimate"], [4, 3, 1, "", "GetNumAdversarialQueries"], [4, 3, 1, "", "GetNumLargeDigits"], [4, 3, 1, "", "GetPREMode"], [4, 3, 1, "", "GetPRENumHops"], [4, 3, 1, "", "GetPlaintextModulus"], [4, 3, 1, "", "GetRegisterWordSize"], [4, 3, 1, "", "GetRingDim"], [4, 3, 1, "", "GetScalingModSize"], [4, 3, 1, "", "GetScalingTechnique"], [4, 3, 1, "", "GetScheme"], [4, 3, 1, "", "GetSecretKeyDist"], [4, 3, 1, "", "GetSecurityLevel"], [4, 3, 1, "", "GetStandardDeviation"], [4, 3, 1, "", "GetStatisticalSecurity"], [4, 3, 1, "", "SetBatchSize"], [4, 3, 1, "", "SetCKKSDataType"], [4, 3, 1, "", "SetCompositeDegree"], [4, 3, 1, "", "SetDecryptionNoiseMode"], [4, 3, 1, "", "SetDesiredPrecision"], [4, 3, 1, "", "SetDigitSize"], [4, 3, 1, "", "SetEncryptionTechnique"], [4, 3, 1, "", "SetEvalAddCount"], [4, 3, 1, "", "SetExecutionMode"], [4, 3, 1, "", "SetFirstModSize"], [4, 3, 1, "", "SetInteractiveBootCompressionLevel"], [4, 3, 1, "", "SetKeySwitchCount"], [4, 3, 1, "", "SetKeySwitchTechnique"], [4, 3, 1, "", "SetMaxRelinSkDeg"], [4, 3, 1, "", "SetMultipartyMode"], [4, 3, 1, "", "SetMultiplicationTechnique"], [4, 3, 1, "", "SetMultiplicativeDepth"], [4, 3, 1, "", "SetNoiseEstimate"], [4, 3, 1, "", "SetNumAdversarialQueries"], [4, 3, 1, "", "SetNumLargeDigits"], [4, 3, 1, "", "SetPREMode"], [4, 3, 1, "", "SetPRENumHops"], [4, 3, 1, "", "SetPlaintextModulus"], [4, 3, 1, "", "SetRegisterWordSize"], [4, 3, 1, "", "SetRingDim"], [4, 3, 1, "", "SetScalingModSize"], [4, 3, 1, "", "SetScalingTechnique"], [4, 3, 1, "", "SetSecretKeyDist"], [4, 3, 1, "", "SetSecurityLevel"], [4, 3, 1, "", "SetStandardDeviation"], [4, 3, 1, "", "SetStatisticalSecurity"], [4, 3, 1, "", "SetThresholdNumOfParties"]], "openfhe.Ciphertext": [[2, 3, 1, "", "Clone"], [2, 3, 1, "", "GetLevel"], [2, 3, 1, "", "GetNoiseScaleDeg"], [2, 3, 1, "", "GetSlots"], [2, 3, 1, "", "RemoveElement"], [2, 3, 1, "", "SetLevel"], [2, 3, 1, "", "SetNoiseScaleDeg"], [2, 3, 1, "", "SetSlots"]], "openfhe.DecryptionNoiseMode": [[7, 1, 1, "", "FIXED_NOISE_DECRYPT"], [7, 1, 1, "", "NOISE_FLOODING_DECRYPT"], [7, 2, 1, "", "name"], [7, 2, 1, "", "value"]], "openfhe.EncryptionTechnique": [[7, 1, 1, "", "EXTENDED"], [7, 1, 1, "", "STANDARD"], [7, 2, 1, "", "name"], [7, 2, 1, "", "value"]], "openfhe.ExecutionMode": [[7, 1, 1, "", "EXEC_EVALUATION"], [7, 1, 1, "", "EXEC_NOISE_ESTIMATION"], [7, 2, 1, "", "name"], [7, 2, 1, "", "value"]], "openfhe.KeyPair": [[6, 3, 1, "", "good"], [6, 2, 1, "", "publicKey"], [6, 2, 1, "", "secretKey"]], "openfhe.KeySwitchTechnique": [[7, 1, 1, "", "BV"], [7, 1, 1, "", "HYBRID"], [7, 1, 1, "", "INVALID_KS_TECH"], [7, 2, 1, "", "name"], [7, 2, 1, "", "value"]], "openfhe.LWECiphertext": [[0, 3, 1, "", "GetLength"], [0, 3, 1, "", "GetModulus"]], "openfhe.LWEPrivateKey": [[0, 3, 1, "", "GetLength"]], "openfhe.MultipartyMode": [[7, 1, 1, "", "FIXED_NOISE_MULTIPARTY"], [7, 1, 1, "", "INVALID_MULTIPARTY_MODE"], [7, 1, 1, "", "NOISE_FLOODING_MULTIPARTY"], [7, 2, 1, "", "name"], [7, 2, 1, "", "value"]], "openfhe.MultiplicationTechnique": [[7, 1, 1, "", "BEHZ"], [7, 1, 1, "", "HPS"], [7, 1, 1, "", "HPSPOVERQ"], [7, 1, 1, "", "HPSPOVERQLEVELED"], [7, 2, 1, "", "name"], [7, 2, 1, "", "value"]], "openfhe.PKESchemeFeature": [[7, 1, 1, "", "ADVANCEDSHE"], [7, 1, 1, "", "FHE"], [7, 1, 1, "", "KEYSWITCH"], [7, 1, 1, "", "LEVELEDSHE"], [7, 1, 1, "", "MULTIPARTY"], [7, 1, 1, "", "PKE"], [7, 1, 1, "", "PRE"], [7, 1, 1, "", "SCHEMESWITCH"], [7, 2, 1, "", "name"], [7, 2, 1, "", "value"]], "openfhe.Plaintext": [[8, 3, 1, "", "Decode"], [8, 3, 1, "", "Encode"], [8, 3, 1, "", "GetCKKSPackedValue"], [8, 3, 1, "", "GetCoefPackedValue"], [8, 3, 1, "", "GetFormattedValues"], [8, 3, 1, "", "GetLength"], [8, 3, 1, "", "GetLevel"], [8, 3, 1, "", "GetLogError"], [8, 3, 1, "", "GetLogPrecision"], [8, 3, 1, "", "GetNoiseScaleDeg"], [8, 3, 1, "", "GetPackedValue"], [8, 3, 1, "", "GetRealPackedValue"], [8, 3, 1, "", "GetScalingFactor"], [8, 3, 1, "", "GetSchemeID"], [8, 3, 1, "", "GetSlots"], [8, 3, 1, "", "GetStringValue"], [8, 3, 1, "", "HighBound"], [8, 3, 1, "", "IsEncoded"], [8, 3, 1, "", "LowBound"], [8, 3, 1, "", "SetFormat"], [8, 3, 1, "", "SetIntVectorValue"], [8, 3, 1, "", "SetLength"], [8, 3, 1, "", "SetLevel"], [8, 3, 1, "", "SetNoiseScaleDeg"], [8, 3, 1, "", "SetScalingFactor"], [8, 3, 1, "", "SetSlots"], [8, 3, 1, "", "SetStringValue"]], "openfhe.PrivateKey": [[6, 3, 1, "", "GetKeyTag"], [6, 3, 1, "", "SetKeyTag"]], "openfhe.ProxyReEncryptionMode": [[7, 1, 1, "", "FIXED_NOISE_HRA"], [7, 1, 1, "", "INDCPA"], [7, 1, 1, "", "NOISE_FLOODING_HRA"], [7, 1, 1, "", "NOT_SET"], [7, 2, 1, "", "name"], [7, 2, 1, "", "value"]], "openfhe.PublicKey": [[6, 3, 1, "", "GetKeyTag"], [6, 3, 1, "", "SetKeyTag"]], "openfhe.SCHEME": [[7, 1, 1, "", "BFVRNS_SCHEME"], [7, 1, 1, "", "BGVRNS_SCHEME"], [7, 1, 1, "", "CKKSRNS_SCHEME"], [7, 1, 1, "", "INVALID_SCHEME"], [7, 2, 1, "", "name"], [7, 2, 1, "", "value"]], "openfhe.ScalingTechnique": [[7, 1, 1, "", "COMPOSITESCALINGAUTO"], [7, 1, 1, "", "COMPOSITESCALINGMANUAL"], [7, 1, 1, "", "FIXEDAUTO"], [7, 1, 1, "", "FIXEDMANUAL"], [7, 1, 1, "", "FLEXIBLEAUTO"], [7, 1, 1, "", "FLEXIBLEAUTOEXT"], [7, 1, 1, "", "INVALID_RS_TECHNIQUE"], [7, 1, 1, "", "NORESCALE"], [7, 2, 1, "", "name"], [7, 2, 1, "", "value"]], "openfhe.SecretKeyDist": [[7, 1, 1, "", "GAUSSIAN"], [7, 1, 1, "", "SPARSE_TERNARY"], [7, 1, 1, "", "UNIFORM_TERNARY"], [7, 2, 1, "", "name"], [7, 2, 1, "", "value"]], "openfhe.SecurityLevel": [[7, 1, 1, "", "HEStd_128_classic"], [7, 1, 1, "", "HEStd_192_classic"], [7, 1, 1, "", "HEStd_256_classic"], [7, 1, 1, "", "HEStd_NotSet"], [7, 2, 1, "", "name"], [7, 2, 1, "", "value"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:property", "3": "py:method"}, "terms": {"": 3, "0": [0, 1, 3, 7], "1": [1, 3, 7], "10": 3, "11": [0, 1], "12": 1, "128": 7, "13": 1, "14": 1, "15": 1, "16": 7, "18": 1, "19": 1, "1st": 3, "2": [0, 1, 3, 7, 8], "20": 1, "2018": 3, "21": 1, "22": 1, "23": 1, "24": 1, "244": 3, "25": [1, 3], "26": 1, "2nd": 3, "3": [1, 3, 7], "32": 7, "4": [0, 1, 3, 7], "43": 1, "5": [1, 3, 7], "6": [1, 7], "64": [3, 7], "7": [1, 7], "8": [1, 7], "9": 1, "A": 3, "AND": [0, 1, 3], "BE": 3, "BY": 3, "FOR": 3, "For": 3, "IN": 3, "If": 3, "In": 3, "It": [3, 5], "NOT": [0, 3], "Not": 3, "OR": [0, 1], "THE": 3, "The": [0, 2, 3, 4, 8], "There": 3, "abov": 3, "accept": 3, "access": 5, "accord": 0, "account": 3, "across": 3, "add": 3, "addend": 3, "addfirst": 3, "addit": 3, "adjust": 3, "advanc": 0, "advancedsh": 7, "after": 3, "aggreg": 3, "algorithm": 3, "alia": 3, "all": [3, 5], "allow": [3, 8], "also": 3, "alwai": 3, "amount": 3, "an": [0, 2, 3, 5], "ani": 3, "anoth": 3, "anymor": 3, "ap": 1, "appli": 3, "appropri": 3, "approxim": 3, "ar": [3, 4, 6], "arbfunc": 0, "arbitrari": 0, "arg": [0, 3, 8], "arg0": [0, 2, 3, 4, 6, 8], "arg1": [0, 8], "arg2": 8, "arg3": 8, "argmax": 3, "argmin": 3, "argument": 3, "arithmet": 3, "assign": 3, "assum": 3, "automoph": 3, "automorph": 3, "avail": [3, 4], "b": 3, "babi": 3, "base": [0, 1, 2, 3, 4, 6, 7, 8], "basi": 3, "batch": 3, "batchsiz": 3, "becaus": 3, "befor": 3, "behz": 7, "benefit": 3, "better": 3, "between": 3, "bfv": [4, 5, 8], "bfvrns_scheme": 7, "bgv": [3, 4, 5], "bgvrns_scheme": 7, "binari": [0, 3, 5], "binaryinputarch": 0, "binaryoutputarch": 0, "binfh": 5, "binfhe_method": [0, 5], "binfhe_output": [0, 1, 5], "binfhe_paramset": [0, 1, 5], "binfhecontext": [3, 5], "binfhecryptoparam": 0, "binfheschem": 0, "bingat": [0, 1, 5], "bit": [0, 8], "bool": [0, 3, 6, 8], "boostrap": 3, "bootstrap": [0, 1, 3, 5], "both": [3, 6], "bound": [3, 8], "bt": 3, "btkeygen": [0, 5], "budget": 3, "built": 5, "bv": 7, "c": 5, "c0": 3, "cach": 3, "calcul": [3, 8], "call": [0, 3], "callabl": 3, "can": [0, 3, 8], "capabl": 5, "care": 0, "cclwe": 3, "ccparamsbfvrn": [4, 5], "ccparamsbgvrn": [4, 5], "ccparamsckksrn": [4, 5], "cereal": 0, "cggi": [0, 5], "chang": [3, 8], "chebyshev": 3, "check": [6, 8], "ciphertext": [0, 3, 5], "ciphertext1": 3, "ciphertext2": 3, "ciphertextvec": 3, "circl": 3, "ckk": [3, 4, 5, 8], "ckksdatatyp": [3, 4], "ckkspackedencod": 3, "ckksrns_scheme": 7, "class": [0, 1, 2, 3, 4, 6, 7, 8], "clear": 3, "clearbtkei": [0, 5], "clearevalautomorphismkei": 3, "client": 3, "clone": [2, 5], "coeffici": 3, "coefpack": 8, "coefpackedencod": 3, "column": 3, "combin": 3, "common": [3, 5], "compar": 3, "comparison": 3, "compat": 0, "complex": [3, 8], "compon": [3, 8], "compos": 3, "compositescalingauto": 7, "compositescalingmanu": 7, "compress": 3, "compression_level": 4, "comput": [3, 5], "conjug": 3, "constant": 3, "construct": 3, "contain": 3, "context": [0, 3], "correctionfactor": 3, "correctli": 6, "correspond": 3, "cosin": 3, "creat": [0, 3], "crt": 3, "crypto": [0, 3, 4], "cryptocontext": [0, 5], "cryptograph": 5, "cryptoparam": 5, "cryptoparamsbgvrn": 5, "cryptoparamsckksrn": 5, "ct": 0, "ct1": 0, "ct2": 0, "ctvector": 0, "current": 3, "custom": [0, 3], "cyclotom": 3, "cyrptoparamsbfvrn": 5, "data": 5, "deal": 3, "debuggin": 3, "decod": [3, 5, 8], "decodingl": 3, "decompos": 3, "decomposit": [0, 3], "decrypt": [0, 3, 5], "decryptionnoisemod": [4, 5, 7], "default": [0, 3], "defin": 3, "degre": 3, "depend": 3, "deprec": 3, "depth": 3, "deriv": 3, "deseri": 3, "deserializeevalautomorphismkei": 3, "deserializeevalmultkei": 3, "desir": 3, "detail": 3, "determin": 3, "develop": 5, "differ": 3, "digit": 3, "dim1": 3, "dimens": [0, 3], "dist": 5, "divis": 3, "dm": [0, 5], "do": 3, "doe": 3, "done": 3, "doubl": 8, "down": 0, "dure": 3, "dynam": 0, "each": 3, "effici": [3, 5], "either": 3, "element": [2, 3], "empti": 3, "enabl": [3, 5], "encod": [3, 5, 8], "encryot": 3, "encrypt": [0, 3, 5, 8], "encryptiontechniqu": [4, 5, 7], "enum": [3, 5], "eprint": 3, "etc": 3, "eval": 3, "evaladd": 3, "evaladdcount": 3, "evaladdinplac": 3, "evaladdmani": 3, "evaladdmanyinplac": 3, "evaladdmut": 3, "evaladdmutableinplac": 3, "evalatindex": 3, "evalatindexkeygen": 3, "evalauto": 3, "evalautomorphismkei": 3, "evalautomorphismkeygen": 3, "evalbing": [0, 5], "evalbootstrap": 3, "evalbootstrapkeygen": 3, "evalbootstrapsetup": 3, "evalchebyshevfunct": 3, "evalchebyshevseri": 3, "evalchebyshevserieslinear": 3, "evalchebyshevseriesp": 3, "evalckkstofhew": 3, "evalckkstofhewkeygen": 3, "evalckkstofhewprecomput": 3, "evalckkstofhewsetup": 3, "evalco": 3, "evalcompareschemeswitch": 3, "evalcompareswitchprecomput": 3, "evalconst": [0, 5], "evaldecomp": [0, 5], "evaldivid": 3, "evalfastrot": 3, "evalfastrotationext": 3, "evalfastrotationprecomput": 3, "evalfhewtockk": 3, "evalfhewtockkskeygen": 3, "evalfhewtockkssetup": 3, "evalfloor": [0, 5], "evalfunc": [0, 5], "evalinnerproduct": 3, "evalkei": 3, "evalkey1": 3, "evalkey2": 3, "evalkeymap": 3, "evalkeymap1": 3, "evalkeymap2": 3, "evalkeyvec": 3, "evalkeyvector": 3, "evallinearwsum": 3, "evallinearwsummut": 3, "evallogist": 3, "evalmaxschemeswitch": 3, "evalmaxschemeswitchingalt": 3, "evalmerg": 3, "evalminschemeswitch": 3, "evalminschemeswitchingalt": 3, "evalmult": 3, "evalmultandrelinear": 3, "evalmultkeygen": 3, "evalmultkeysgen": 3, "evalmultmani": 3, "evalmultmut": 3, "evalmultmutableinplac": 3, "evalmultnorelin": 3, "evalmultskeygen": 3, "evalneg": 3, "evalnegateinplac": 3, "evalnot": [0, 5], "evalpermut": 3, "evalpermutebgstephoist": 3, "evalpoli": 3, "evalpolylinear": 3, "evalpolyp": 3, "evalrot": 3, "evalrotatekeygen": 3, "evalschemeswitchingkeygen": 3, "evalschemeswitchingsetup": 3, "evalsign": [0, 5], "evalsin": 3, "evalsquar": 3, "evalsquareinplac": 3, "evalsquaremut": 3, "evalsub": 3, "evalsubinplac": 3, "evalsubmut": 3, "evalsubmutableinplac": 3, "evalsum": 3, "evalsumcol": 3, "evalsumcolskeygen": 3, "evalsumkeygen": 3, "evalsumkeymap": 3, "evalsumrow": 3, "evalsumrowskeygen": 3, "evalu": [0, 3, 8], "except": 3, "exec_evalu": 7, "exec_noise_estim": 7, "execut": 5, "executionmod": [4, 5, 7, 8], "exist": 3, "exp": 3, "expans": 3, "expect": 3, "experiment": 3, "extend": [0, 3, 7], "extract": 3, "f": 0, "factor": [3, 8], "failur": 3, "fals": [0, 3, 8], "familiar": 0, "fast": 3, "faster": 3, "featur": [3, 5], "fft": 3, "fhe": [3, 5, 7], "fhew": 3, "file": 3, "filenam": 3, "final": 3, "find": 3, "findautomorphismindex": 3, "findautomorphismindic": 3, "first": [0, 3], "fixed_noise_decrypt": 7, "fixed_noise_hra": 7, "fixed_noise_multiparti": 7, "fixedauto": 7, "fixedmanu": [3, 7], "flag": 0, "flexibleauto": [3, 7], "flexibleautoext": 7, "float": [3, 4, 8], "floor": 8, "flush": 3, "fmt": 8, "follow": [3, 4], "format": 8, "found": 3, "fresh": [0, 1, 3], "friendli": 5, "from": [2, 3], "ftt": 3, "full": 3, "fulli": 5, "func": 3, "function": [0, 3, 8], "further": 3, "futur": 3, "gate": [0, 5], "gaussian": 7, "gener": [0, 3], "generatebinfhecontext": [0, 5], "generatelutviafunct": [0, 5], "get": [2, 3, 8], "get_ptr": 3, "getbatchs": 4, "getbeta": [0, 5], "getbinccforschemeswitch": 3, "getbinfheschem": [0, 5], "getckksdatatyp": [3, 4], "getckkspackedvalu": [5, 8], "getcoefpackedvalu": [5, 8], "getcompositedegre": [3, 4], "getcyclotomicord": 3, "getdecryptionnoisemod": 4, "getdesiredprecis": 4, "getdigits": [3, 4], "getencryptiontechniqu": 4, "getevaladdcount": [3, 4], "getevalautomorphismkeymap": 3, "getevalmultkeyvector": 3, "getevalsumkeymap": 3, "getexecutionmod": 4, "getfirstmods": 4, "getformattedvalu": [5, 8], "getinteractivebootcompressionlevel": 4, "getkeygenlevel": 3, "getkeyswitchcount": [3, 4], "getkeyswitchtechniqu": 4, "getkeytag": [5, 6], "getlength": [0, 5, 8], "getlevel": [2, 5, 8], "getlogerror": [5, 8], "getlogprecis": [5, 8], "getlweschem": [0, 5], "getmaxplaintextspac": [0, 5], "getmaxrelinskdeg": 4, "getmodulu": [0, 3, 5], "getmodulusckk": 3, "getmultipartymod": 4, "getmultiplicationtechniqu": 4, "getmultiplicativedepth": [3, 4], "getn": [0, 5], "getnoiseestim": [3, 4], "getnoisescaledeg": [2, 5, 8], "getnumadversarialqueri": 4, "getnumlargedigit": 4, "getpackedvalu": [5, 8], "getparam": [0, 5], "getplaintextmodulu": [3, 4], "getpremod": 4, "getprenumhop": [3, 4], "getpublickei": [0, 5], "getq": [0, 5], "getrealpackedvalu": [5, 8], "getrefreshkei": [0, 5], "getregisterwords": [3, 4], "getringdim": 4, "getringdimens": 3, "getscalingfactor": [5, 8], "getscalingfactorr": 3, "getscalingmods": 4, "getscalingtechniqu": [3, 4], "getschem": 4, "getschemeid": [5, 8], "getsecretkeydist": 4, "getsecuritylevel": 4, "getslot": [2, 5, 8], "getstandarddevi": 4, "getstatisticalsecur": 4, "getstringvalu": [5, 8], "getswitchkei": [0, 5], "getter": 3, "giant": 3, "ginx": [0, 1], "given": [2, 3], "go": 3, "good": [5, 6], "greater": 8, "greatli": 3, "h_0": 3, "h_0i": 3, "h_1": 3, "h_1i": 3, "halevi": 3, "happen": 3, "have": [3, 5], "helib": 3, "here": 3, "hestd_128_class": 7, "hestd_192_class": 7, "hestd_256_class": 7, "hestd_notset": 7, "high": 3, "highbound": [5, 8], "higher": 3, "hoist": 3, "homomorph": [3, 5], "hood": 3, "how": 3, "hp": 7, "hpspoverq": 7, "hpspoverqlevel": 7, "http": 3, "hybrid": [3, 7], "i": [3, 5, 8], "iacr": 3, "id": [3, 8], "identifi": 3, "idx": 3, "idxlist": 3, "ignor": 3, "implement": [3, 5], "improv": 3, "includ": [3, 5], "increas": 3, "indcpa": 7, "independ": 3, "index": [2, 3], "indexlist": 3, "indic": [0, 3], "initi": [3, 6], "inner": [2, 3], "input": [0, 3], "insert": 3, "insertevalautomorphismkei": 3, "insertevalmultkei": 3, "insertevalsumkei": 3, "instead": [0, 3], "int": [0, 2, 3, 4, 8], "int32": 3, "intbootadd": 3, "intbootadjustscal": 3, "intbootdecrypt": 3, "intbootencrypt": 3, "integ": [0, 3], "interact": 3, "interfac": 5, "intern": 3, "interpol": 3, "intmpbootadd": 3, "intmpbootadjustscal": 3, "intmpbootdecrypt": 3, "intmpbootencrypt": 3, "intmpbootrandomelementgen": 3, "invalid_ks_tech": 7, "invalid_method": 1, "invalid_multiparty_mod": 7, "invalid_output": 1, "invalid_rs_techniqu": 7, "invalid_schem": 7, "isencod": [5, 8], "issu": 3, "iter": 3, "its": 2, "join": 3, "jsoninputarch": 0, "jsonoutputarch": 0, "junk": 3, "k": 3, "keep": 5, "kei": [0, 3, 5], "keygen": [0, 3, 5], "keygen_mod": 0, "keygenmod": 0, "keygenn": [0, 5], "keygenpair": [0, 5], "keyid": 3, "keypair": [3, 5], "keyswitch": 7, "keyswitchcount": 3, "keyswitchgen": 3, "keyswitchtechniqu": [4, 5, 7], "keytag": 3, "kwarg": [0, 3, 8], "l": 3, "larg": 0, "last": 3, "lbcrypto": [0, 3], "lead": 3, "learn": 3, "left": 3, "length": 8, "less": [3, 8], "level": [2, 3, 5], "levelbudget": 3, "leveledsh": 7, "librari": 5, "like": 3, "linear": 3, "link": 3, "list": [0, 3, 8], "lmkcdei": [0, 1], "loadbinari": [0, 5], "loadjson": [0, 5], "loadportablebinari": [0, 5], "log": [0, 8], "logic": 3, "logist": 3, "logq": [0, 3], "look": 0, "low": 3, "lowbound": [5, 8], "lower": [3, 8], "lowest": 3, "lut": 0, "lwe": [0, 3], "lweciphertext": [3, 5], "lweciphertextimpl": 0, "lweencryptionschem": 0, "lwekeypairimpl": 0, "lweprivatekei": [3, 5], "lweprivatekeyimpl": 0, "lwepublickeyimpl": 0, "lwesk": 3, "lweswitchingkeyimpl": 0, "m": [0, 3], "m_q": 0, "mai": 3, "main": [0, 5], "makeckkspackedplaintext": 3, "makeckksplaintext": 3, "makecoefpackedplaintext": 3, "makepackedplaintext": 3, "makespars": 3, "makestringplaintext": 3, "mani": 3, "map": 3, "mask": 3, "match": 3, "matrix": 3, "max": 3, "maximum": 3, "mean": 3, "mechan": 3, "medium": [0, 1], "member": [1, 7], "merg": 3, "messag": [0, 3], "meta": 3, "method": [0, 3, 8], "min": 3, "minimum": 3, "minuend": 3, "mod": [0, 3], "mode": 5, "modreduc": 3, "modreduceinplac": 3, "modulo": 3, "modulu": [0, 3, 8], "more": [3, 5], "most": 0, "multi": 3, "multiaddevalautomorphismkei": 3, "multiaddevalkei": 3, "multiaddevalmultkei": 3, "multiaddevalsumkei": 3, "multiaddpubkei": 3, "multievalatindexkeygen": 3, "multievalsumkeygen": 3, "multikeyswitchgen": 3, "multimultevalkei": 3, "multiparti": [3, 5], "multipartydecryptfus": 3, "multipartydecryptlead": 3, "multipartydecryptmain": 3, "multipartykeygen": 3, "multipartymod": [4, 5, 7], "multipl": [3, 5], "multipli": 3, "multiplicand": 3, "multiplicationtechniqu": [4, 5, 7], "multiplicativedepth": 3, "must": 8, "mutabl": 3, "n": 0, "naiv": 3, "name": [0, 1, 7], "nand": [0, 1], "native_s": 3, "necessari": 3, "need": [0, 3], "neew": 3, "neg": 3, "negat": 3, "new": [3, 8], "newprivatekei": 3, "newpublickei": 3, "newsiz": 8, "nois": 5, "noise_flooding_decrypt": 7, "noise_flooding_hra": 7, "noise_flooding_multiparti": 7, "noiseestim": 3, "noisescaledeg": 3, "non": 6, "none": [0, 2, 3, 4, 6, 8], "nor": [0, 1], "norescal": 7, "normal": 3, "not_set": 7, "now": 3, "ntru": 3, "null": [3, 6], "number": [0, 2, 3, 8], "numcol": 3, "numctxt": 3, "numiter": 3, "numrow": 3, "numslot": 3, "numslotsckk": 3, "numvalu": 3, "object": [0, 3, 4], "ofparti": 3, "oldprivatekei": 3, "one": 3, "onehot": 3, "onli": [0, 3, 8], "open": 5, "openfh": [0, 1, 2, 3, 4, 6, 7, 8], "oper": [3, 5], "order": 3, "org": 3, "origin": 3, "originalprivatekei": 3, "otherwis": [3, 8], "output": [0, 3, 5], "over": [0, 3, 5], "overload": [0, 3, 8], "p": [0, 3, 8], "pack": [3, 8], "packedencod": 3, "pair": 3, "param": [0, 3], "paramet": [0, 2, 3, 4, 5, 8], "parmtyp": 3, "part": 3, "parti": 3, "partial": 3, "partialciphertextvec": 3, "particular": 3, "paterson": 3, "path": 3, "per": [3, 4], "perform": [2, 3, 5], "permut": 3, "pke": 5, "pkeschemefeatur": [3, 5, 7], "place": 3, "plaintex": 3, "plaintext": [0, 3, 5], "pleas": 3, "plwe": 3, "pmax": 3, "pmin": 3, "polynomi": [3, 8], "portablebinaryinputarch": 0, "portablebinaryoutputarch": 0, "posit": 3, "power": [3, 5], "pre": [3, 7], "precis": [0, 3, 8], "precomput": 3, "predefin": 0, "prenumhop": 3, "prepar": 3, "previou": 3, "primit": 5, "prior": 3, "privat": [3, 5], "privatekei": [3, 5, 6], "privatekeyvec": 3, "procedur": 3, "produc": 3, "product": 3, "properti": [1, 6, 7], "protocol": 3, "provid": [3, 5], "proxi": [3, 5], "proxyreencryptionmod": [4, 5, 7], "public": [3, 5], "publickei": [3, 5, 6], "publickey1": 3, "publickey2": 3, "purpos": 3, "pybind11_object": [0, 1, 2, 3, 4, 6, 7, 8], "q": 3, "random": 3, "rang": 3, "re": 3, "real": [3, 8], "recipi": 3, "recommend": 0, "reduc": 3, "reencrypt": [3, 5], "refer": 3, "refresh": [0, 3], "regular": 3, "rekeygen": 3, "relinear": 3, "relinearizeinplac": 3, "remov": 2, "removeel": [2, 5], "replac": 3, "repres": 3, "requir": 3, "rescal": 3, "rescaleinplac": 3, "resiz": 8, "respect": 4, "result": [0, 3, 6], "retriev": 3, "return": [0, 2, 3, 6, 8], "reus": 3, "right": 3, "ring": [0, 3], "ringgsw": 0, "ringgswacckeyimpl": 0, "rlwe": 0, "rotat": 3, "round": 0, "roundbit": 0, "routin": 3, "row": 3, "rowsiz": 3, "rtype": [0, 3, 8], "run": 3, "same": 3, "savebinari": [0, 5], "savejson": [0, 5], "saveportablebinari": [0, 5], "scalar": 3, "scale": [2, 3, 5, 8], "scaledeg": 3, "scalesign": 3, "scalingtechniqu": [3, 4, 5, 7, 8], "scheme": [0, 3, 4, 5, 8], "schemeswitch": [0, 7], "schswchparam": 3, "second": [0, 3], "secret": [0, 3, 5, 6], "secretkei": [5, 6], "secretkeydist": [4, 5, 7], "section": 3, "secur": 5, "securitylevel": [4, 5, 7], "see": 3, "select": 0, "self": [0, 2, 3, 4, 6, 8], "separ": 3, "serbinari": 3, "seri": 3, "serial": [0, 3], "serializedobjectnam": [0, 5], "serializedvers": [0, 5], "serializeevalautomorphismkei": 3, "serializeevalmultkei": 3, "serjson": 3, "sertyp": 3, "set": [0, 2, 3, 5, 8], "setbatchs": 4, "setckksdatatyp": 4, "setcompositedegre": 4, "setdecryptionnoisemod": 4, "setdesiredprecis": 4, "setdigits": 4, "setencryptiontechniqu": 4, "setevaladdcount": [3, 4], "setexecutionmod": 4, "setfirstmods": 4, "setformat": [5, 8], "setinteractivebootcompressionlevel": 4, "setintvectorvalu": [5, 8], "setkeygenlevel": 3, "setkeyswitchcount": [3, 4], "setkeyswitchtechniqu": 4, "setkeytag": [5, 6], "setlength": [5, 8], "setlevel": [2, 5, 8], "setmaxrelinskdeg": 4, "setmultipartymod": 4, "setmultiplicationtechniqu": 4, "setmultiplicativedepth": [3, 4], "setnoiseestim": [3, 4], "setnoisescaledeg": [2, 5, 8], "setnumadversarialqueri": 4, "setnumlargedigit": 4, "setplaintextmodulu": 4, "setpremod": 4, "setprenumhop": [3, 4], "setregisterwords": 4, "setringdim": 4, "setscalingfactor": [5, 8], "setscalingmods": 4, "setscalingtechniqu": 4, "setsecretkeydist": 4, "setsecuritylevel": 4, "setslot": [2, 5, 8], "setstandarddevi": 4, "setstatisticalsecur": 4, "setstringvalu": [5, 8], "setter": 3, "setthresholdnumofparti": 4, "sever": 3, "sf": 8, "share": 3, "sharepair": 3, "sharepairvec": 3, "sharespair": 3, "sharespairvec": 3, "shift": 3, "should": [0, 3], "shoup": 3, "sign": [0, 3], "signed_mod_test": 1, "silent": 3, "sine": 3, "singl": 3, "size": [3, 8], "sk": 0, "slot": 3, "slower": 3, "small": 3, "smooth": 3, "so": 3, "sourc": [3, 5], "sparse_ternari": 7, "specif": 3, "specifi": 3, "squar": 3, "standard": [3, 7], "star": 3, "start": 3, "static": 3, "std": 0, "std128": [0, 1], "std128_3": 1, "std128_3_lmkcdei": 1, "std128_4": 1, "std128_4_lmkcdei": 1, "std128_ap": 1, "std128_lmkcdei": 1, "std128q": 1, "std128q_3": 1, "std128q_3_lmkcdei": 1, "std128q_4": 1, "std128q_4_lmkcdei": 1, "std128q_lmkcdei": 1, "std192": [0, 1], "std192q": 1, "std192q_3": 1, "std192q_4": 1, "std256": [0, 1], "std256q": 1, "std256q_3": 1, "std256q_4": 1, "step": 3, "stockmey": 3, "store": 3, "str": [0, 3, 6, 8], "strategi": 3, "string": [0, 3], "stringencod": 3, "subr": 3, "subringdim": 3, "subroutin": 0, "subtract": 3, "subtrahend": 3, "success": 3, "sum": 3, "summat": 3, "support": [3, 8], "switch": [0, 3, 5], "sym_encrypt": 0, "symmetr": 0, "t": 3, "tabl": 0, "tag": 3, "target": 3, "techniqu": [0, 3, 5, 8], "term": 8, "than": [3, 8], "thei": 3, "them": 3, "thi": [3, 8], "three": 3, "threshold": 3, "timeoptim": 0, "toi": [0, 1], "topologi": 3, "tower": 3, "towersleft": 3, "transform": 3, "tree": 3, "true": [3, 8], "two": 3, "type": [0, 2, 3, 5, 6, 8], "uint32_t": 0, "under": 3, "unencrypt": 3, "uniform_ternari": 7, "unit": 3, "unus": 3, "up": [0, 3], "updat": 3, "upper": [3, 8], "us": [0, 3], "user": [0, 3, 5], "valu": [1, 3, 7, 8], "variant": 0, "vector": [2, 3, 8], "version": [0, 3], "via": 3, "want": 3, "we": 3, "were": 3, "when": 3, "where": 3, "whether": [0, 6], "which": 3, "while": 5, "whose": 3, "wise": 3, "withour": 3, "without": [3, 5], "work": 8, "wrapper": 5, "x": 3, "xnor": [0, 1], "xnor_fast": 1, "xor": [0, 1], "xor_fast": 1, "you": 3}, "titles": ["BinFHEContext", "BinFHE enums", "Ciphertext", "CryptoContext", "CryptoParams", "Welcome to OpenFHE - Python\u2019s documentation!", "Public Key", "PKE enums", "Plaintext"], "titleterms": {"": 5, "api": 5, "binari": 1, "binfh": 1, "binfhe_method": 1, "binfhecontext": 0, "ciphertext": 2, "cryptocontext": 3, "cryptoparam": 4, "cryptoparamsbgvrn": 4, "cryptoparamsckksrn": 4, "cyrptoparamsbfvrn": 4, "decrypt": 7, "dist": 7, "document": 5, "encrypt": 7, "enum": [1, 7], "execut": 7, "featur": 7, "gate": 1, "kei": [6, 7], "keypair": 6, "level": 7, "lweciphertext": 0, "lweprivatekei": 0, "mode": 7, "multiparti": 7, "multipl": 7, "nois": 7, "openfh": 5, "output": 1, "paramet": 1, "pke": 7, "plaintext": 8, "privat": 6, "proxi": 7, "public": 6, "python": 5, "reencrypt": 7, "refer": 5, "scale": 7, "scheme": 7, "secret": 7, "secur": 7, "set": 1, "switch": 7, "techniqu": 7, "type": 7, "welcom": 5}})